
./lang:     ファイル形式 elf64-x86-64


セクション .interp の逆アセンブル:

0000000000000318 <.interp>:
 318:	2f                   	(bad)
 319:	6c                   	insb   (%dx),%es:(%rdi)
 31a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 321:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 326:	78 2d                	js     355 <_init-0xcab>
 328:	78 38                	js     362 <_init-0xc9e>
 32a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 330:	6f                   	outsl  %ds:(%rsi),(%dx)
 331:	2e 32 00             	cs xor (%rax),%al

セクション .note.gnu.property の逆アセンブル:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    $0x0,%al
 33a:	00 00                	add    %al,(%rax)
 33c:	10 00                	adc    %al,(%rax)
 33e:	00 00                	add    %al,(%rax)
 340:	05 00 00 00 47       	add    $0x47000000,%eax
 345:	4e 55                	rex.WRX push %rbp
 347:	00 02                	add    %al,(%rdx)
 349:	80 00 c0             	addb   $0xc0,(%rax)
 34c:	04 00                	add    $0x0,%al
 34e:	00 00                	add    %al,(%rax)
 350:	01 00                	add    %eax,(%rax)
 352:	00 00                	add    %al,(%rax)
 354:	00 00                	add    %al,(%rax)
	...

セクション .note.gnu.build-id の逆アセンブル:

0000000000000358 <.note.gnu.build-id>:
 358:	04 00                	add    $0x0,%al
 35a:	00 00                	add    %al,(%rax)
 35c:	14 00                	adc    $0x0,%al
 35e:	00 00                	add    %al,(%rax)
 360:	03 00                	add    (%rax),%eax
 362:	00 00                	add    %al,(%rax)
 364:	47                   	rex.RXB
 365:	4e 55                	rex.WRX push %rbp
 367:	00 d9                	add    %bl,%cl
 369:	4a 70 57             	rex.WX jo 3c3 <_init-0xc3d>
 36c:	dd a6 fd f0 be 1f    	frstor 0x1fbef0fd(%rsi)
 372:	14 36                	adc    $0x36,%al
 374:	0e                   	(bad)
 375:	8d 94 a5 63 d5 d8 1d 	lea    0x1dd8d563(%rbp,%riz,4),%edx

セクション .note.ABI-tag の逆アセンブル:

000000000000037c <.note.ABI-tag>:
 37c:	04 00                	add    $0x0,%al
 37e:	00 00                	add    %al,(%rax)
 380:	10 00                	adc    %al,(%rax)
 382:	00 00                	add    %al,(%rax)
 384:	01 00                	add    %eax,(%rax)
 386:	00 00                	add    %al,(%rax)
 388:	47                   	rex.RXB
 389:	4e 55                	rex.WRX push %rbp
 38b:	00 00                	add    %al,(%rax)
 38d:	00 00                	add    %al,(%rax)
 38f:	00 04 00             	add    %al,(%rax,%rax,1)
 392:	00 00                	add    %al,(%rax)
 394:	04 00                	add    $0x0,%al
 396:	00 00                	add    %al,(%rax)
 398:	00 00                	add    %al,(%rax)
	...

セクション .gnu.hash の逆アセンブル:

00000000000003a0 <.gnu.hash>:
 3a0:	01 00                	add    %eax,(%rax)
 3a2:	00 00                	add    %al,(%rax)
 3a4:	01 00                	add    %eax,(%rax)
 3a6:	00 00                	add    %al,(%rax)
 3a8:	01 00                	add    %eax,(%rax)
	...

セクション .dynsym の逆アセンブル:

00000000000003c0 <.dynsym>:
	...
 3d8:	74 01                	je     3db <_init-0xc25>
 3da:	00 00                	add    %al,(%rax)
 3dc:	12 00                	adc    (%rax),%al
	...
 3ee:	00 00                	add    %al,(%rax)
 3f0:	64 00 00             	add    %al,%fs:(%rax)
 3f3:	00 12                	add    %dl,(%rdx)
	...
 405:	00 00                	add    %al,(%rax)
 407:	00 74 00 00          	add    %dh,0x0(%rax,%rax,1)
 40b:	00 12                	add    %dl,(%rdx)
	...
 41d:	00 00                	add    %al,(%rax)
 41f:	00 8d 00 00 00 12    	add    %cl,0x12000000(%rbp)
	...
 435:	00 00                	add    %al,(%rax)
 437:	00 2f                	add    %ch,(%rdi)
 439:	01 00                	add    %eax,(%rax)
 43b:	00 22                	add    %ah,(%rdx)
	...
 44d:	00 00                	add    %al,(%rax)
 44f:	00 46 00             	add    %al,0x0(%rsi)
 452:	00 00                	add    %al,(%rax)
 454:	12 00                	adc    (%rax),%al
	...
 466:	00 00                	add    %al,(%rax)
 468:	50                   	push   %rax
 469:	01 00                	add    %eax,(%rax)
 46b:	00 12                	add    %dl,(%rdx)
	...
 47d:	00 00                	add    %al,(%rax)
 47f:	00 3e                	add    %bh,(%rsi)
 481:	01 00                	add    %eax,(%rax)
 483:	00 12                	add    %dl,(%rdx)
	...
 495:	00 00                	add    %al,(%rax)
 497:	00 d8                	add    %bl,%al
 499:	00 00                	add    %al,(%rax)
 49b:	00 12                	add    %dl,(%rdx)
	...
 4ad:	00 00                	add    %al,(%rax)
 4af:	00 5c 01 00          	add    %bl,0x0(%rcx,%rax,1)
 4b3:	00 12                	add    %dl,(%rdx)
	...
 4c5:	00 00                	add    %al,(%rax)
 4c7:	00 9f 00 00 00 12    	add    %bl,0x12000000(%rdi)
	...
 4dd:	00 00                	add    %al,(%rax)
 4df:	00 fc                	add    %bh,%ah
 4e1:	00 00                	add    %al,(%rax)
 4e3:	00 12                	add    %dl,(%rdx)
	...
 4f5:	00 00                	add    %al,(%rax)
 4f7:	00 63 01             	add    %ah,0x1(%rbx)
 4fa:	00 00                	add    %al,(%rax)
 4fc:	12 00                	adc    (%rax),%al
	...
 50e:	00 00                	add    %al,(%rax)
 510:	02 01                	add    (%rcx),%al
 512:	00 00                	add    %al,(%rax)
 514:	12 00                	adc    (%rax),%al
	...
 526:	00 00                	add    %al,(%rax)
 528:	57                   	push   %rdi
 529:	01 00                	add    %eax,(%rax)
 52b:	00 12                	add    %dl,(%rdx)
	...
 53d:	00 00                	add    %al,(%rax)
 53f:	00 a6 00 00 00 12    	add    %ah,0x12000000(%rsi)
	...
 555:	00 00                	add    %al,(%rax)
 557:	00 10                	add    %dl,(%rax)
 559:	01 00                	add    %eax,(%rax)
 55b:	00 12                	add    %dl,(%rdx)
	...
 56d:	00 00                	add    %al,(%rax)
 56f:	00 c3                	add    %al,%bl
 571:	00 00                	add    %al,(%rax)
 573:	00 12                	add    %dl,(%rdx)
	...
 585:	00 00                	add    %al,(%rax)
 587:	00 10                	add    %dl,(%rax)
 589:	00 00                	add    %al,(%rax)
 58b:	00 20                	add    %ah,(%rax)
	...
 59d:	00 00                	add    %al,(%rax)
 59f:	00 20                	add    %ah,(%rax)
 5a1:	01 00                	add    %eax,(%rax)
 5a3:	00 12                	add    %dl,(%rdx)
	...
 5b5:	00 00                	add    %al,(%rax)
 5b7:	00 01                	add    %al,(%rcx)
 5b9:	00 00                	add    %al,(%rax)
 5bb:	00 20                	add    %ah,(%rax)
	...
 5cd:	00 00                	add    %al,(%rax)
 5cf:	00 2c 00             	add    %ch,(%rax,%rax,1)
 5d2:	00 00                	add    %al,(%rax)
 5d4:	20 00                	and    %al,(%rax)
	...

セクション .dynstr の逆アセンブル:

00000000000005e8 <.dynstr>:
 5e8:	00 5f 5f             	add    %bl,0x5f(%rdi)
 5eb:	67 6d                	insl   (%dx),%es:(%edi)
 5ed:	6f                   	outsl  %ds:(%rsi),(%dx)
 5ee:	6e                   	outsb  %ds:(%rsi),(%dx)
 5ef:	5f                   	pop    %rdi
 5f0:	73 74                	jae    666 <_init-0x99a>
 5f2:	61                   	(bad)
 5f3:	72 74                	jb     669 <_init-0x997>
 5f5:	5f                   	pop    %rdi
 5f6:	5f                   	pop    %rdi
 5f7:	00 5f 49             	add    %bl,0x49(%rdi)
 5fa:	54                   	push   %rsp
 5fb:	4d 5f                	rex.WRB pop %r15
 5fd:	64 65 72 65          	fs gs jb 666 <_init-0x99a>
 601:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 608:	4d 
 609:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 60b:	6f                   	outsl  %ds:(%rsi),(%dx)
 60c:	6e                   	outsb  %ds:(%rsi),(%dx)
 60d:	65 54                	gs push %rsp
 60f:	61                   	(bad)
 610:	62                   	(bad)
 611:	6c                   	insb   (%dx),%es:(%rdi)
 612:	65 00 5f 49          	add    %bl,%gs:0x49(%rdi)
 616:	54                   	push   %rsp
 617:	4d 5f                	rex.WRB pop %r15
 619:	72 65                	jb     680 <_init-0x980>
 61b:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 622:	4d 
 623:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 625:	6f                   	outsl  %ds:(%rsi),(%dx)
 626:	6e                   	outsb  %ds:(%rsi),(%dx)
 627:	65 54                	gs push %rsp
 629:	61                   	(bad)
 62a:	62                   	(bad)
 62b:	6c                   	insb   (%dx),%es:(%rdi)
 62c:	65 00 5f 5a          	add    %bl,%gs:0x5a(%rdi)
 630:	53                   	push   %rbx
 631:	74 32                	je     665 <_init-0x99b>
 633:	30 5f 5f             	xor    %bl,0x5f(%rdi)
 636:	74 68                	je     6a0 <_init-0x960>
 638:	72 6f                	jb     6a9 <_init-0x957>
 63a:	77 5f                	ja     69b <_init-0x965>
 63c:	6c                   	insb   (%dx),%es:(%rdi)
 63d:	65 6e                	outsb  %gs:(%rsi),(%dx)
 63f:	67 74 68             	addr32 je 6aa <_init-0x956>
 642:	5f                   	pop    %rdi
 643:	65 72 72             	gs jb  6b8 <_init-0x948>
 646:	6f                   	outsl  %ds:(%rsi),(%dx)
 647:	72 50                	jb     699 <_init-0x967>
 649:	4b 63 00             	rex.WXB movslq (%r8),%rax
 64c:	5f                   	pop    %rdi
 64d:	5a                   	pop    %rdx
 64e:	53                   	push   %rbx
 64f:	74 39                	je     68a <_init-0x976>
 651:	74 65                	je     6b8 <_init-0x948>
 653:	72 6d                	jb     6c2 <_init-0x93e>
 655:	69 6e 61 74 65 76 00 	imul   $0x766574,0x61(%rsi),%ebp
 65c:	5f                   	pop    %rdi
 65d:	5a                   	pop    %rdx
 65e:	53                   	push   %rbx
 65f:	74 31                	je     692 <_init-0x96e>
 661:	37                   	(bad)
 662:	5f                   	pop    %rdi
 663:	5f                   	pop    %rdi
 664:	74 68                	je     6ce <_init-0x932>
 666:	72 6f                	jb     6d7 <_init-0x929>
 668:	77 5f                	ja     6c9 <_init-0x937>
 66a:	62 61 64 5f 61       	(bad)
 66f:	6c                   	insb   (%dx),%es:(%rdi)
 670:	6c                   	insb   (%dx),%es:(%rdi)
 671:	6f                   	outsl  %ds:(%rsi),(%dx)
 672:	63 76 00             	movsxd 0x0(%rsi),%esi
 675:	5f                   	pop    %rdi
 676:	5f                   	pop    %rdi
 677:	63 78 61             	movsxd 0x61(%rax),%edi
 67a:	5f                   	pop    %rdi
 67b:	62 65 67 69 6e       	(bad)
 680:	5f                   	pop    %rdi
 681:	63 61 74             	movsxd 0x74(%rcx),%esp
 684:	63 68 00             	movsxd 0x0(%rax),%ebp
 687:	5f                   	pop    %rdi
 688:	5a                   	pop    %rdx
 689:	64 6c                	fs insb (%dx),%es:(%rdi)
 68b:	50                   	push   %rax
 68c:	76 00                	jbe    68e <_init-0x972>
 68e:	5f                   	pop    %rdi
 68f:	5a                   	pop    %rdx
 690:	53                   	push   %rbx
 691:	74 32                	je     6c5 <_init-0x93b>
 693:	31 69 6f             	xor    %ebp,0x6f(%rcx)
 696:	73 5f                	jae    6f7 <_init-0x909>
 698:	62 61                	(bad)
 69a:	73 65                	jae    701 <_init-0x8ff>
 69c:	5f                   	pop    %rdi
 69d:	6c                   	insb   (%dx),%es:(%rdi)
 69e:	69 62 72 61 72 79 5f 	imul   $0x5f797261,0x72(%rdx),%esp
 6a5:	69 6e 69 74 76 00 5f 	imul   $0x5f007674,0x69(%rsi),%ebp
 6ac:	5f                   	pop    %rdi
 6ad:	67 78 78             	addr32 js 728 <_init-0x8d8>
 6b0:	5f                   	pop    %rdi
 6b1:	70 65                	jo     718 <_init-0x8e8>
 6b3:	72 73                	jb     728 <_init-0x8d8>
 6b5:	6f                   	outsl  %ds:(%rsi),(%dx)
 6b6:	6e                   	outsb  %ds:(%rsi),(%dx)
 6b7:	61                   	(bad)
 6b8:	6c                   	insb   (%dx),%es:(%rdi)
 6b9:	69 74 79 5f 76 30 00 	imul   $0x5f003076,0x5f(%rcx,%rdi,2),%esi
 6c0:	5f 
 6c1:	5a                   	pop    %rdx
 6c2:	53                   	push   %rbx
 6c3:	74 32                	je     6f7 <_init-0x909>
 6c5:	38 5f 5f             	cmp    %bl,0x5f(%rdi)
 6c8:	74 68                	je     732 <_init-0x8ce>
 6ca:	72 6f                	jb     73b <_init-0x8c5>
 6cc:	77 5f                	ja     72d <_init-0x8d3>
 6ce:	62 61 64 5f 61       	(bad)
 6d3:	72 72                	jb     747 <_init-0x8b9>
 6d5:	61                   	(bad)
 6d6:	79 5f                	jns    737 <_init-0x8c9>
 6d8:	6e                   	outsb  %ds:(%rsi),(%dx)
 6d9:	65 77 5f             	gs ja  73b <_init-0x8c5>
 6dc:	6c                   	insb   (%dx),%es:(%rdi)
 6dd:	65 6e                	outsb  %gs:(%rsi),(%dx)
 6df:	67 74 68             	addr32 je 74a <_init-0x8b6>
 6e2:	76 00                	jbe    6e4 <_init-0x91c>
 6e4:	5f                   	pop    %rdi
 6e5:	5a                   	pop    %rdx
 6e6:	6e                   	outsb  %ds:(%rsi),(%dx)
 6e7:	77 6d                	ja     756 <_init-0x8aa>
 6e9:	00 5f 5f             	add    %bl,0x5f(%rdi)
 6ec:	63 78 61             	movsxd 0x61(%rax),%edi
 6ef:	5f                   	pop    %rdi
 6f0:	72 65                	jb     757 <_init-0x8a9>
 6f2:	74 68                	je     75c <_init-0x8a4>
 6f4:	72 6f                	jb     765 <_init-0x89b>
 6f6:	77 00                	ja     6f8 <_init-0x908>
 6f8:	5f                   	pop    %rdi
 6f9:	5f                   	pop    %rdi
 6fa:	63 78 61             	movsxd 0x61(%rax),%edi
 6fd:	5f                   	pop    %rdi
 6fe:	65 6e                	outsb  %gs:(%rsi),(%dx)
 700:	64 5f                	fs pop %rdi
 702:	63 61 74             	movsxd 0x74(%rcx),%esp
 705:	63 68 00             	movsxd 0x0(%rax),%ebp
 708:	5f                   	pop    %rdi
 709:	55                   	push   %rbp
 70a:	6e                   	outsb  %ds:(%rsi),(%dx)
 70b:	77 69                	ja     776 <_init-0x88a>
 70d:	6e                   	outsb  %ds:(%rsi),(%dx)
 70e:	64 5f                	fs pop %rdi
 710:	52                   	push   %rdx
 711:	65 73 75             	gs jae 789 <_init-0x877>
 714:	6d                   	insl   (%dx),%es:(%rdi)
 715:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 719:	63 78 61             	movsxd 0x61(%rax),%edi
 71c:	5f                   	pop    %rdi
 71d:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 723:	7a 65                	jp     78a <_init-0x876>
 725:	00 5f 5f             	add    %bl,0x5f(%rdi)
 728:	6c                   	insb   (%dx),%es:(%rdi)
 729:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 730:	72 74                	jb     7a6 <_init-0x85a>
 732:	5f                   	pop    %rdi
 733:	6d                   	insl   (%dx),%es:(%rdi)
 734:	61                   	(bad)
 735:	69 6e 00 6d 65 6d 73 	imul   $0x736d656d,0x0(%rsi),%ebp
 73c:	65 74 00             	gs je  73f <_init-0x8c1>
 73f:	70 75                	jo     7b6 <_init-0x84a>
 741:	74 73                	je     7b6 <_init-0x84a>
 743:	00 6d 65             	add    %ch,0x65(%rbp)
 746:	6d                   	insl   (%dx),%es:(%rdi)
 747:	63 70 79             	movsxd 0x79(%rax),%esi
 74a:	00 5f 5f             	add    %bl,0x5f(%rdi)
 74d:	73 74                	jae    7c3 <_init-0x83d>
 74f:	61                   	(bad)
 750:	63 6b 5f             	movsxd 0x5f(%rbx),%ebp
 753:	63 68 6b             	movsxd 0x6b(%rax),%ebp
 756:	5f                   	pop    %rdi
 757:	66 61                	data16 (bad)
 759:	69 6c 00 70 72 69 6e 	imul   $0x746e6972,0x70(%rax,%rax,1),%ebp
 760:	74 
 761:	66 00 6c 69 62       	data16 add %ch,0x62(%rcx,%rbp,2)
 766:	73 74                	jae    7dc <_init-0x824>
 768:	64 63 2b             	movsxd %fs:(%rbx),%ebp
 76b:	2b 2e                	sub    (%rsi),%ebp
 76d:	73 6f                	jae    7de <_init-0x822>
 76f:	2e 36 00 6c 69 62    	cs ss add %ch,0x62(%rcx,%rbp,2)
 775:	6d                   	insl   (%dx),%es:(%rdi)
 776:	2e 73 6f             	jae,pn 7e8 <_init-0x818>
 779:	2e 36 00 6c 69 62    	cs ss add %ch,0x62(%rcx,%rbp,2)
 77f:	67 63 63 5f          	movsxd 0x5f(%ebx),%esp
 783:	73 2e                	jae    7b3 <_init-0x84d>
 785:	73 6f                	jae    7f6 <_init-0x80a>
 787:	2e 31 00             	cs xor %eax,(%rax)
 78a:	6c                   	insb   (%dx),%es:(%rdi)
 78b:	69 62 63 2e 73 6f 2e 	imul   $0x2e6f732e,0x63(%rdx),%esp
 792:	36 00 47 43          	ss add %al,0x43(%rdi)
 796:	43 5f                	rex.XB pop %r15
 798:	33 2e                	xor    (%rsi),%ebp
 79a:	30 00                	xor    %al,(%rax)
 79c:	47                   	rex.RXB
 79d:	4c                   	rex.WR
 79e:	49                   	rex.WB
 79f:	42                   	rex.X
 7a0:	43 58                	rex.XB pop %r8
 7a2:	58                   	pop    %rax
 7a3:	5f                   	pop    %rdi
 7a4:	33 2e                	xor    (%rsi),%ebp
 7a6:	34 2e                	xor    $0x2e,%al
 7a8:	33 32                	xor    (%rdx),%esi
 7aa:	00 47 4c             	add    %al,0x4c(%rdi)
 7ad:	49                   	rex.WB
 7ae:	42                   	rex.X
 7af:	43 58                	rex.XB pop %r8
 7b1:	58                   	pop    %rax
 7b2:	5f                   	pop    %rdi
 7b3:	33 2e                	xor    (%rsi),%ebp
 7b5:	34 2e                	xor    $0x2e,%al
 7b7:	32 39                	xor    (%rcx),%bh
 7b9:	00 43 58             	add    %al,0x58(%rbx)
 7bc:	58                   	pop    %rax
 7bd:	41                   	rex.B
 7be:	42                   	rex.X
 7bf:	49 5f                	rex.WB pop %r15
 7c1:	31 2e                	xor    %ebp,(%rsi)
 7c3:	33 00                	xor    (%rax),%eax
 7c5:	47                   	rex.RXB
 7c6:	4c                   	rex.WR
 7c7:	49                   	rex.WB
 7c8:	42                   	rex.X
 7c9:	43 58                	rex.XB pop %r8
 7cb:	58                   	pop    %rax
 7cc:	5f                   	pop    %rdi
 7cd:	33 2e                	xor    (%rsi),%ebp
 7cf:	34 00                	xor    $0x0,%al
 7d1:	47                   	rex.RXB
 7d2:	4c                   	rex.WR
 7d3:	49                   	rex.WB
 7d4:	42                   	rex.X
 7d5:	43 5f                	rex.XB pop %r15
 7d7:	32 2e                	xor    (%rsi),%ch
 7d9:	34 00                	xor    $0x0,%al
 7db:	47                   	rex.RXB
 7dc:	4c                   	rex.WR
 7dd:	49                   	rex.WB
 7de:	42                   	rex.X
 7df:	43 5f                	rex.XB pop %r15
 7e1:	32 2e                	xor    (%rsi),%ch
 7e3:	31 34 00             	xor    %esi,(%rax,%rax,1)
 7e6:	47                   	rex.RXB
 7e7:	4c                   	rex.WR
 7e8:	49                   	rex.WB
 7e9:	42                   	rex.X
 7ea:	43 5f                	rex.XB pop %r15
 7ec:	32 2e                	xor    (%rsi),%ch
 7ee:	33 34 00             	xor    (%rax,%rax,1),%esi
 7f1:	47                   	rex.RXB
 7f2:	4c                   	rex.WR
 7f3:	49                   	rex.WB
 7f4:	42                   	rex.X
 7f5:	43 5f                	rex.XB pop %r15
 7f7:	32 2e                	xor    (%rsi),%ch
 7f9:	32 2e                	xor    (%rsi),%ch
 7fb:	35                   	.byte 0x35
	...

セクション .gnu.version の逆アセンブル:

00000000000007fe <.gnu.version>:
 7fe:	00 00                	add    %al,(%rax)
 800:	02 00                	add    (%rax),%al
 802:	03 00                	add    (%rax),%eax
 804:	03 00                	add    (%rax),%eax
 806:	04 00                	add    $0x0,%al
 808:	02 00                	add    (%rax),%al
 80a:	03 00                	add    (%rax),%eax
 80c:	02 00                	add    (%rax),%al
 80e:	05 00 06 00 07       	add    $0x7000600,%eax
 813:	00 03                	add    %al,(%rbx)
 815:	00 03                	add    %al,(%rbx)
 817:	00 08                	add    %cl,(%rax)
 819:	00 04 00             	add    %al,(%rax,%rax,1)
 81c:	02 00                	add    (%rax),%al
 81e:	09 00                	or     %eax,(%rax)
 820:	04 00                	add    $0x0,%al
 822:	04 00                	add    $0x0,%al
 824:	01 00                	add    %eax,(%rax)
 826:	0a 00                	or     (%rax),%al
 828:	01 00                	add    %eax,(%rax)
 82a:	01 00                	add    %eax,(%rax)

セクション .gnu.version_r の逆アセンブル:

0000000000000830 <.gnu.version_r>:
 830:	01 00                	add    %eax,(%rax)
 832:	01 00                	add    %eax,(%rax)
 834:	94                   	xchg   %eax,%esp
 835:	01 00                	add    %eax,(%rax)
 837:	00 10                	add    %dl,(%rax)
 839:	00 00                	add    %al,(%rax)
 83b:	00 20                	add    %ah,(%rax)
 83d:	00 00                	add    %al,(%rax)
 83f:	00 50 26             	add    %dl,0x26(%rax)
 842:	79 0b                	jns    84f <_init-0x7b1>
 844:	00 00                	add    %al,(%rax)
 846:	0a 00                	or     (%rax),%al
 848:	ac                   	lods   %ds:(%rsi),%al
 849:	01 00                	add    %eax,(%rax)
 84b:	00 00                	add    %al,(%rax)
 84d:	00 00                	add    %al,(%rax)
 84f:	00 01                	add    %al,(%rcx)
 851:	00 04 00             	add    %al,(%rax,%rax,1)
 854:	7b 01                	jnp    857 <_init-0x7a9>
 856:	00 00                	add    %al,(%rax)
 858:	10 00                	adc    %al,(%rax)
 85a:	00 00                	add    %al,(%rax)
 85c:	50                   	push   %rax
 85d:	00 00                	add    %al,(%rax)
 85f:	00 42 f8             	add    %al,-0x8(%rdx)
 862:	97                   	xchg   %eax,%edi
 863:	02 00                	add    (%rax),%al
 865:	00 09                	add    %cl,(%rcx)
 867:	00 b4 01 00 00 10 00 	add    %dh,0x100000(%rcx,%rax,1)
 86e:	00 00                	add    %al,(%rax)
 870:	79 f8                	jns    86a <_init-0x796>
 872:	97                   	xchg   %eax,%edi
 873:	02 00                	add    (%rax),%al
 875:	00 06                	add    %al,(%rsi)
 877:	00 c3                	add    %al,%bl
 879:	01 00                	add    %eax,(%rax)
 87b:	00 10                	add    %dl,(%rax)
 87d:	00 00                	add    %al,(%rax)
 87f:	00 d3                	add    %dl,%bl
 881:	af                   	scas   %es:(%rdi),%eax
 882:	6b 05 00 00 04 00 d2 	imul   $0xffffffd2,0x40000(%rip),%eax        # 40889 <_end+0x3b7f1>
 889:	01 00                	add    %eax,(%rax)
 88b:	00 10                	add    %dl,(%rax)
 88d:	00 00                	add    %al,(%rax)
 88f:	00 74 29 92          	add    %dh,-0x6e(%rcx,%rbp,1)
 893:	08 00                	or     %al,(%rax)
 895:	00 03                	add    %al,(%rbx)
 897:	00 dd                	add    %bl,%ch
 899:	01 00                	add    %eax,(%rax)
 89b:	00 00                	add    %al,(%rax)
 89d:	00 00                	add    %al,(%rax)
 89f:	00 01                	add    %al,(%rcx)
 8a1:	00 04 00             	add    %al,(%rax,%rax,1)
 8a4:	a2 01 00 00 10 00 00 	movabs %al,0x10000001
 8ab:	00 00 
 8ad:	00 00                	add    %al,(%rax)
 8af:	00 14 69             	add    %dl,(%rcx,%rbp,2)
 8b2:	69 0d 00 00 08 00 e9 	imul   $0x1e9,0x80000(%rip),%ecx        # 808bc <_end+0x7b824>
 8b9:	01 00 00 
 8bc:	10 00                	adc    %al,(%rax)
 8be:	00 00                	add    %al,(%rax)
 8c0:	94                   	xchg   %eax,%esp
 8c1:	91                   	xchg   %eax,%ecx
 8c2:	96                   	xchg   %eax,%esi
 8c3:	06                   	(bad)
 8c4:	00 00                	add    %al,(%rax)
 8c6:	07                   	(bad)
 8c7:	00 f3                	add    %dh,%bl
 8c9:	01 00                	add    %eax,(%rax)
 8cb:	00 10                	add    %dl,(%rax)
 8cd:	00 00                	add    %al,(%rax)
 8cf:	00 b4 91 96 06 00 00 	add    %dh,0x696(%rcx,%rdx,4)
 8d6:	05 00 fe 01 00       	add    $0x1fe00,%eax
 8db:	00 10                	add    %dl,(%rax)
 8dd:	00 00                	add    %al,(%rax)
 8df:	00 75 1a             	add    %dh,0x1a(%rbp)
 8e2:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 8e8:	09 02                	or     %eax,(%rdx)
 8ea:	00 00                	add    %al,(%rax)
 8ec:	00 00                	add    %al,(%rax)
	...

セクション .rela.dyn の逆アセンブル:

00000000000008f0 <.rela.dyn>:
 8f0:	a0 4d 00 00 00 00 00 	movabs 0x80000000000004d,%al
 8f7:	00 08 
 8f9:	00 00                	add    %al,(%rax)
 8fb:	00 00                	add    %al,(%rax)
 8fd:	00 00                	add    %al,(%rax)
 8ff:	00 10                	add    %dl,(%rax)
 901:	12 00                	adc    (%rax),%al
 903:	00 00                	add    %al,(%rax)
 905:	00 00                	add    %al,(%rax)
 907:	00 a8 4d 00 00 00    	add    %ch,0x4d(%rax)
 90d:	00 00                	add    %al,(%rax)
 90f:	00 08                	add    %cl,(%rax)
 911:	00 00                	add    %al,(%rax)
 913:	00 00                	add    %al,(%rax)
 915:	00 00                	add    %al,(%rax)
 917:	00 c0                	add    %al,%al
 919:	11 00                	adc    %eax,(%rax)
 91b:	00 00                	add    %al,(%rax)
 91d:	00 00                	add    %al,(%rax)
 91f:	00 80 50 00 00 00    	add    %al,0x50(%rax)
 925:	00 00                	add    %al,(%rax)
 927:	00 08                	add    %cl,(%rax)
 929:	00 00                	add    %al,(%rax)
 92b:	00 00                	add    %al,(%rax)
 92d:	00 00                	add    %al,(%rax)
 92f:	00 80 50 00 00 00    	add    %al,0x50(%rax)
 935:	00 00                	add    %al,(%rax)
 937:	00 c0                	add    %al,%al
 939:	4f 00 00             	rex.WRXB add %r8b,(%r8)
 93c:	00 00                	add    %al,(%rax)
 93e:	00 00                	add    %al,(%rax)
 940:	06                   	(bad)
 941:	00 00                	add    %al,(%rax)
 943:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 949 <_init-0x6b7>
 949:	00 00                	add    %al,(%rax)
 94b:	00 00                	add    %al,(%rax)
 94d:	00 00                	add    %al,(%rax)
 94f:	00 c8                	add    %cl,%al
 951:	4f 00 00             	rex.WRXB add %r8b,(%r8)
 954:	00 00                	add    %al,(%rax)
 956:	00 00                	add    %al,(%rax)
 958:	06                   	(bad)
 959:	00 00                	add    %al,(%rax)
 95b:	00 08                	add    %cl,(%rax)
	...
 965:	00 00                	add    %al,(%rax)
 967:	00 d0                	add    %dl,%al
 969:	4f 00 00             	rex.WRXB add %r8b,(%r8)
 96c:	00 00                	add    %al,(%rax)
 96e:	00 00                	add    %al,(%rax)
 970:	06                   	(bad)
 971:	00 00                	add    %al,(%rax)
 973:	00 13                	add    %dl,(%rbx)
	...
 97d:	00 00                	add    %al,(%rax)
 97f:	00 d8                	add    %bl,%al
 981:	4f 00 00             	rex.WRXB add %r8b,(%r8)
 984:	00 00                	add    %al,(%rax)
 986:	00 00                	add    %al,(%rax)
 988:	06                   	(bad)
 989:	00 00                	add    %al,(%rax)
 98b:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 991 <_init-0x66f>
 991:	00 00                	add    %al,(%rax)
 993:	00 00                	add    %al,(%rax)
 995:	00 00                	add    %al,(%rax)
 997:	00 e0                	add    %ah,%al
 999:	4f 00 00             	rex.WRXB add %r8b,(%r8)
 99c:	00 00                	add    %al,(%rax)
 99e:	00 00                	add    %al,(%rax)
 9a0:	06                   	(bad)
 9a1:	00 00                	add    %al,(%rax)
 9a3:	00 16                	add    %dl,(%rsi)
	...
 9ad:	00 00                	add    %al,(%rax)
 9af:	00 88 50 00 00 00    	add    %cl,0x50(%rax)
 9b5:	00 00                	add    %al,(%rax)
 9b7:	00 01                	add    %al,(%rcx)
 9b9:	00 00                	add    %al,(%rax)
 9bb:	00 12                	add    %dl,(%rdx)
	...

セクション .rela.plt の逆アセンブル:

00000000000009c8 <.rela.plt>:
 9c8:	00 50 00             	add    %dl,0x0(%rax)
 9cb:	00 00                	add    %al,(%rax)
 9cd:	00 00                	add    %al,(%rax)
 9cf:	00 07                	add    %al,(%rdi)
 9d1:	00 00                	add    %al,(%rax)
 9d3:	00 01                	add    %al,(%rcx)
	...
 9dd:	00 00                	add    %al,(%rax)
 9df:	00 08                	add    %cl,(%rax)
 9e1:	50                   	push   %rax
 9e2:	00 00                	add    %al,(%rax)
 9e4:	00 00                	add    %al,(%rax)
 9e6:	00 00                	add    %al,(%rax)
 9e8:	07                   	(bad)
 9e9:	00 00                	add    %al,(%rax)
 9eb:	00 02                	add    %al,(%rdx)
	...
 9f5:	00 00                	add    %al,(%rax)
 9f7:	00 10                	add    %dl,(%rax)
 9f9:	50                   	push   %rax
 9fa:	00 00                	add    %al,(%rax)
 9fc:	00 00                	add    %al,(%rax)
 9fe:	00 00                	add    %al,(%rax)
 a00:	07                   	(bad)
 a01:	00 00                	add    %al,(%rax)
 a03:	00 03                	add    %al,(%rbx)
	...
 a0d:	00 00                	add    %al,(%rax)
 a0f:	00 18                	add    %bl,(%rax)
 a11:	50                   	push   %rax
 a12:	00 00                	add    %al,(%rax)
 a14:	00 00                	add    %al,(%rax)
 a16:	00 00                	add    %al,(%rax)
 a18:	07                   	(bad)
 a19:	00 00                	add    %al,(%rax)
 a1b:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 a26:	00 00                	add    %al,(%rax)
 a28:	20 50 00             	and    %dl,0x0(%rax)
 a2b:	00 00                	add    %al,(%rax)
 a2d:	00 00                	add    %al,(%rax)
 a2f:	00 07                	add    %al,(%rdi)
 a31:	00 00                	add    %al,(%rax)
 a33:	00 06                	add    %al,(%rsi)
	...
 a3d:	00 00                	add    %al,(%rax)
 a3f:	00 28                	add    %ch,(%rax)
 a41:	50                   	push   %rax
 a42:	00 00                	add    %al,(%rax)
 a44:	00 00                	add    %al,(%rax)
 a46:	00 00                	add    %al,(%rax)
 a48:	07                   	(bad)
 a49:	00 00                	add    %al,(%rax)
 a4b:	00 07                	add    %al,(%rdi)
	...
 a55:	00 00                	add    %al,(%rax)
 a57:	00 30                	add    %dh,(%rax)
 a59:	50                   	push   %rax
 a5a:	00 00                	add    %al,(%rax)
 a5c:	00 00                	add    %al,(%rax)
 a5e:	00 00                	add    %al,(%rax)
 a60:	07                   	(bad)
 a61:	00 00                	add    %al,(%rax)
 a63:	00 09                	add    %cl,(%rcx)
	...
 a6d:	00 00                	add    %al,(%rax)
 a6f:	00 38                	add    %bh,(%rax)
 a71:	50                   	push   %rax
 a72:	00 00                	add    %al,(%rax)
 a74:	00 00                	add    %al,(%rax)
 a76:	00 00                	add    %al,(%rax)
 a78:	07                   	(bad)
 a79:	00 00                	add    %al,(%rax)
 a7b:	00 0a                	add    %cl,(%rdx)
	...
 a85:	00 00                	add    %al,(%rax)
 a87:	00 40 50             	add    %al,0x50(%rax)
 a8a:	00 00                	add    %al,(%rax)
 a8c:	00 00                	add    %al,(%rax)
 a8e:	00 00                	add    %al,(%rax)
 a90:	07                   	(bad)
 a91:	00 00                	add    %al,(%rax)
 a93:	00 0b                	add    %cl,(%rbx)
	...
 a9d:	00 00                	add    %al,(%rax)
 a9f:	00 48 50             	add    %cl,0x50(%rax)
 aa2:	00 00                	add    %al,(%rax)
 aa4:	00 00                	add    %al,(%rax)
 aa6:	00 00                	add    %al,(%rax)
 aa8:	07                   	(bad)
 aa9:	00 00                	add    %al,(%rax)
 aab:	00 0c 00             	add    %cl,(%rax,%rax,1)
	...
 ab6:	00 00                	add    %al,(%rax)
 ab8:	50                   	push   %rax
 ab9:	50                   	push   %rax
 aba:	00 00                	add    %al,(%rax)
 abc:	00 00                	add    %al,(%rax)
 abe:	00 00                	add    %al,(%rax)
 ac0:	07                   	(bad)
 ac1:	00 00                	add    %al,(%rax)
 ac3:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # ac9 <_init-0x537>
 ac9:	00 00                	add    %al,(%rax)
 acb:	00 00                	add    %al,(%rax)
 acd:	00 00                	add    %al,(%rax)
 acf:	00 58 50             	add    %bl,0x50(%rax)
 ad2:	00 00                	add    %al,(%rax)
 ad4:	00 00                	add    %al,(%rax)
 ad6:	00 00                	add    %al,(%rax)
 ad8:	07                   	(bad)
 ad9:	00 00                	add    %al,(%rax)
 adb:	00 0e                	add    %cl,(%rsi)
	...
 ae5:	00 00                	add    %al,(%rax)
 ae7:	00 60 50             	add    %ah,0x50(%rax)
 aea:	00 00                	add    %al,(%rax)
 aec:	00 00                	add    %al,(%rax)
 aee:	00 00                	add    %al,(%rax)
 af0:	07                   	(bad)
 af1:	00 00                	add    %al,(%rax)
 af3:	00 0f                	add    %cl,(%rdi)
	...
 afd:	00 00                	add    %al,(%rax)
 aff:	00 68 50             	add    %ch,0x50(%rax)
 b02:	00 00                	add    %al,(%rax)
 b04:	00 00                	add    %al,(%rax)
 b06:	00 00                	add    %al,(%rax)
 b08:	07                   	(bad)
 b09:	00 00                	add    %al,(%rax)
 b0b:	00 11                	add    %dl,(%rcx)
	...
 b15:	00 00                	add    %al,(%rax)
 b17:	00 70 50             	add    %dh,0x50(%rax)
 b1a:	00 00                	add    %al,(%rax)
 b1c:	00 00                	add    %al,(%rax)
 b1e:	00 00                	add    %al,(%rax)
 b20:	07                   	(bad)
 b21:	00 00                	add    %al,(%rax)
 b23:	00 14 00             	add    %dl,(%rax,%rax,1)
	...

セクション .init の逆アセンブル:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 c9 3f 00 00 	mov    0x3fc9(%rip),%rax        # 4fd8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret

セクション .plt の逆アセンブル:

0000000000001020 <printf@plt-0x10>:
    1020:	ff 35 ca 3f 00 00    	push   0x3fca(%rip)        # 4ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 cc 3f 00 00    	jmp    *0x3fcc(%rip)        # 4ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <printf@plt>:
    1030:	ff 25 ca 3f 00 00    	jmp    *0x3fca(%rip)        # 5000 <printf@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	push   $0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001040 <_ZSt9terminatev@plt>:
    1040:	ff 25 c2 3f 00 00    	jmp    *0x3fc2(%rip)        # 5008 <_ZSt9terminatev@GLIBCXX_3.4>
    1046:	68 01 00 00 00       	push   $0x1
    104b:	e9 d0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001050 <_ZSt17__throw_bad_allocv@plt>:
    1050:	ff 25 ba 3f 00 00    	jmp    *0x3fba(%rip)        # 5010 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    1056:	68 02 00 00 00       	push   $0x2
    105b:	e9 c0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001060 <__cxa_begin_catch@plt>:
    1060:	ff 25 b2 3f 00 00    	jmp    *0x3fb2(%rip)        # 5018 <__cxa_begin_catch@CXXABI_1.3>
    1066:	68 03 00 00 00       	push   $0x3
    106b:	e9 b0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001070 <_ZSt20__throw_length_errorPKc@plt>:
    1070:	ff 25 aa 3f 00 00    	jmp    *0x3faa(%rip)        # 5020 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    1076:	68 04 00 00 00       	push   $0x4
    107b:	e9 a0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001080 <memset@plt>:
    1080:	ff 25 a2 3f 00 00    	jmp    *0x3fa2(%rip)        # 5028 <memset@GLIBC_2.2.5>
    1086:	68 05 00 00 00       	push   $0x5
    108b:	e9 90 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001090 <_ZSt28__throw_bad_array_new_lengthv@plt>:
    1090:	ff 25 9a 3f 00 00    	jmp    *0x3f9a(%rip)        # 5030 <_ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29>
    1096:	68 06 00 00 00       	push   $0x6
    109b:	e9 80 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010a0 <memcpy@plt>:
    10a0:	ff 25 92 3f 00 00    	jmp    *0x3f92(%rip)        # 5038 <memcpy@GLIBC_2.14>
    10a6:	68 07 00 00 00       	push   $0x7
    10ab:	e9 70 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010b0 <_ZdlPv@plt>:
    10b0:	ff 25 8a 3f 00 00    	jmp    *0x3f8a(%rip)        # 5040 <_ZdlPv@GLIBCXX_3.4>
    10b6:	68 08 00 00 00       	push   $0x8
    10bb:	e9 60 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010c0 <_Znwm@plt>:
    10c0:	ff 25 82 3f 00 00    	jmp    *0x3f82(%rip)        # 5048 <_Znwm@GLIBCXX_3.4>
    10c6:	68 09 00 00 00       	push   $0x9
    10cb:	e9 50 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010d0 <__stack_chk_fail@plt>:
    10d0:	ff 25 7a 3f 00 00    	jmp    *0x3f7a(%rip)        # 5050 <__stack_chk_fail@GLIBC_2.4>
    10d6:	68 0a 00 00 00       	push   $0xa
    10db:	e9 40 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010e0 <__cxa_rethrow@plt>:
    10e0:	ff 25 72 3f 00 00    	jmp    *0x3f72(%rip)        # 5058 <__cxa_rethrow@CXXABI_1.3>
    10e6:	68 0b 00 00 00       	push   $0xb
    10eb:	e9 30 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010f0 <puts@plt>:
    10f0:	ff 25 6a 3f 00 00    	jmp    *0x3f6a(%rip)        # 5060 <puts@GLIBC_2.2.5>
    10f6:	68 0c 00 00 00       	push   $0xc
    10fb:	e9 20 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001100 <__cxa_end_catch@plt>:
    1100:	ff 25 62 3f 00 00    	jmp    *0x3f62(%rip)        # 5068 <__cxa_end_catch@CXXABI_1.3>
    1106:	68 0d 00 00 00       	push   $0xd
    110b:	e9 10 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001110 <_Unwind_Resume@plt>:
    1110:	ff 25 5a 3f 00 00    	jmp    *0x3f5a(%rip)        # 5070 <_Unwind_Resume@GCC_3.0>
    1116:	68 0e 00 00 00       	push   $0xe
    111b:	e9 00 ff ff ff       	jmp    1020 <_init+0x20>

セクション .text の逆アセンブル:

0000000000001120 <_start>:
    1120:	f3 0f 1e fa          	endbr64
    1124:	31 ed                	xor    %ebp,%ebp
    1126:	49 89 d1             	mov    %rdx,%r9
    1129:	5e                   	pop    %rsi
    112a:	48 89 e2             	mov    %rsp,%rdx
    112d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1131:	50                   	push   %rax
    1132:	54                   	push   %rsp
    1133:	45 31 c0             	xor    %r8d,%r8d
    1136:	31 c9                	xor    %ecx,%ecx
    1138:	48 8d 3d 41 03 00 00 	lea    0x341(%rip),%rdi        # 1480 <main>
    113f:	ff 15 83 3e 00 00    	call   *0x3e83(%rip)        # 4fc8 <__libc_start_main@GLIBC_2.34>
    1145:	f4                   	hlt
    1146:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    114d:	00 00 00 
    1150:	48 8d 3d 39 3f 00 00 	lea    0x3f39(%rip),%rdi        # 5090 <__TMC_END__>
    1157:	48 8d 05 32 3f 00 00 	lea    0x3f32(%rip),%rax        # 5090 <__TMC_END__>
    115e:	48 39 f8             	cmp    %rdi,%rax
    1161:	74 15                	je     1178 <_start+0x58>
    1163:	48 8b 05 66 3e 00 00 	mov    0x3e66(%rip),%rax        # 4fd0 <_ITM_deregisterTMCloneTable@Base>
    116a:	48 85 c0             	test   %rax,%rax
    116d:	74 09                	je     1178 <_start+0x58>
    116f:	ff e0                	jmp    *%rax
    1171:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1178:	c3                   	ret
    1179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1180:	48 8d 3d 09 3f 00 00 	lea    0x3f09(%rip),%rdi        # 5090 <__TMC_END__>
    1187:	48 8d 35 02 3f 00 00 	lea    0x3f02(%rip),%rsi        # 5090 <__TMC_END__>
    118e:	48 29 fe             	sub    %rdi,%rsi
    1191:	48 89 f0             	mov    %rsi,%rax
    1194:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1198:	48 c1 f8 03          	sar    $0x3,%rax
    119c:	48 01 c6             	add    %rax,%rsi
    119f:	48 d1 fe             	sar    %rsi
    11a2:	74 14                	je     11b8 <_start+0x98>
    11a4:	48 8b 05 35 3e 00 00 	mov    0x3e35(%rip),%rax        # 4fe0 <_ITM_registerTMCloneTable@Base>
    11ab:	48 85 c0             	test   %rax,%rax
    11ae:	74 08                	je     11b8 <_start+0x98>
    11b0:	ff e0                	jmp    *%rax
    11b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    11b8:	c3                   	ret
    11b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    11c0:	f3 0f 1e fa          	endbr64
    11c4:	80 3d c5 3e 00 00 00 	cmpb   $0x0,0x3ec5(%rip)        # 5090 <__TMC_END__>
    11cb:	75 33                	jne    1200 <_start+0xe0>
    11cd:	55                   	push   %rbp
    11ce:	48 83 3d ea 3d 00 00 	cmpq   $0x0,0x3dea(%rip)        # 4fc0 <__cxa_finalize@GLIBC_2.2.5>
    11d5:	00 
    11d6:	48 89 e5             	mov    %rsp,%rbp
    11d9:	74 0d                	je     11e8 <_start+0xc8>
    11db:	48 8b 3d 9e 3e 00 00 	mov    0x3e9e(%rip),%rdi        # 5080 <__dso_handle>
    11e2:	ff 15 d8 3d 00 00    	call   *0x3dd8(%rip)        # 4fc0 <__cxa_finalize@GLIBC_2.2.5>
    11e8:	e8 63 ff ff ff       	call   1150 <_start+0x30>
    11ed:	c6 05 9c 3e 00 00 01 	movb   $0x1,0x3e9c(%rip)        # 5090 <__TMC_END__>
    11f4:	5d                   	pop    %rbp
    11f5:	c3                   	ret
    11f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    11fd:	00 00 00 
    1200:	c3                   	ret
    1201:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    1208:	00 00 00 00 
    120c:	0f 1f 40 00          	nopl   0x0(%rax)
    1210:	f3 0f 1e fa          	endbr64
    1214:	e9 67 ff ff ff       	jmp    1180 <_start+0x60>
    1219:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001220 <_ZN7Machine12execute_codeERKSt6vectorI3AsmSaIS1_EE>:
    1220:	55                   	push   %rbp
    1221:	48 89 e5             	mov    %rsp,%rbp
    1224:	48 83 ec 30          	sub    $0x30,%rsp
    1228:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    122c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    1230:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1234:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1238:	48 c7 40 78 00 00 00 	movq   $0x0,0x78(%rax)
    123f:	00 
    1240:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1244:	48 8b 40 78          	mov    0x78(%rax),%rax
    1248:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    124c:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
    1250:	e8 db 01 00 00       	call   1430 <_ZNKSt6vectorI3AsmSaIS0_EE4sizeEv>
    1255:	48 89 c1             	mov    %rax,%rcx
    1258:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    125c:	48 39 c8             	cmp    %rcx,%rax
    125f:	0f 83 bb 01 00 00    	jae    1420 <_ZN7Machine12execute_codeERKSt6vectorI3AsmSaIS1_EE+0x200>
    1265:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1269:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
    126d:	48 8b 70 78          	mov    0x78(%rax),%rsi
    1271:	e8 ea 01 00 00       	call   1460 <_ZNKSt6vectorI3AsmSaIS0_EEixEm>
    1276:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    127a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    127e:	8b 00                	mov    (%rax),%eax
    1280:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    1284:	48 83 e8 08          	sub    $0x8,%rax
    1288:	0f 87 7d 01 00 00    	ja     140b <_ZN7Machine12execute_codeERKSt6vectorI3AsmSaIS1_EE+0x1eb>
    128e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1292:	48 8d 0d 6b 1d 00 00 	lea    0x1d6b(%rip),%rcx        # 3004 <_IO_stdin_used+0x4>
    1299:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    129d:	48 01 c8             	add    %rcx,%rax
    12a0:	ff e0                	jmp    *%rax
    12a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    12a6:	f6 40 10 01          	testb  $0x1,0x10(%rax)
    12aa:	0f 84 1d 00 00 00    	je     12cd <_ZN7Machine12execute_codeERKSt6vectorI3AsmSaIS1_EE+0xad>
    12b0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    12b4:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    12b8:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    12bc:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    12c0:	0f b6 49 04          	movzbl 0x4(%rcx),%ecx
    12c4:	48 89 14 c8          	mov    %rdx,(%rax,%rcx,8)
    12c8:	e9 1c 00 00 00       	jmp    12e9 <_ZN7Machine12execute_codeERKSt6vectorI3AsmSaIS1_EE+0xc9>
    12cd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    12d1:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    12d5:	0f b6 49 05          	movzbl 0x5(%rcx),%ecx
    12d9:	48 8b 14 c8          	mov    (%rax,%rcx,8),%rdx
    12dd:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    12e1:	0f b6 49 04          	movzbl 0x4(%rcx),%ecx
    12e5:	48 89 14 c8          	mov    %rdx,(%rax,%rcx,8)
    12e9:	e9 1d 01 00 00       	jmp    140b <_ZN7Machine12execute_codeERKSt6vectorI3AsmSaIS1_EE+0x1eb>
    12ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    12f2:	f6 40 10 01          	testb  $0x1,0x10(%rax)
    12f6:	0f 84 21 00 00 00    	je     131d <_ZN7Machine12execute_codeERKSt6vectorI3AsmSaIS1_EE+0xfd>
    12fc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1300:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    1304:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    1308:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    130c:	0f b6 49 04          	movzbl 0x4(%rcx),%ecx
    1310:	48 03 14 c8          	add    (%rax,%rcx,8),%rdx
    1314:	48 89 14 c8          	mov    %rdx,(%rax,%rcx,8)
    1318:	e9 28 00 00 00       	jmp    1345 <_ZN7Machine12execute_codeERKSt6vectorI3AsmSaIS1_EE+0x125>
    131d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1321:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    1325:	0f b6 49 05          	movzbl 0x5(%rcx),%ecx
    1329:	48 8b 14 c8          	mov    (%rax,%rcx,8),%rdx
    132d:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    1331:	0f b6 49 06          	movzbl 0x6(%rcx),%ecx
    1335:	48 03 14 c8          	add    (%rax,%rcx,8),%rdx
    1339:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    133d:	0f b6 49 04          	movzbl 0x4(%rcx),%ecx
    1341:	48 89 14 c8          	mov    %rdx,(%rax,%rcx,8)
    1345:	e9 c1 00 00 00       	jmp    140b <_ZN7Machine12execute_codeERKSt6vectorI3AsmSaIS1_EE+0x1eb>
    134a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    134e:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    1352:	0f b6 49 06          	movzbl 0x6(%rcx),%ecx
    1356:	48 8b 0c c8          	mov    (%rax,%rcx,8),%rcx
    135a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    135e:	48 03 4a 08          	add    0x8(%rdx),%rcx
    1362:	48 8b 11             	mov    (%rcx),%rdx
    1365:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    1369:	0f b6 49 11          	movzbl 0x11(%rcx),%ecx
    136d:	89 c9                	mov    %ecx,%ecx
    136f:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
    1376:	48 d3 e6             	shl    %cl,%rsi
    1379:	48 89 f1             	mov    %rsi,%rcx
    137c:	48 83 f1 ff          	xor    $0xffffffffffffffff,%rcx
    1380:	48 21 ca             	and    %rcx,%rdx
    1383:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    1387:	0f b6 49 05          	movzbl 0x5(%rcx),%ecx
    138b:	48 89 14 c8          	mov    %rdx,(%rax,%rcx,8)
    138f:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    1393:	0f b6 49 04          	movzbl 0x4(%rcx),%ecx
    1397:	89 ca                	mov    %ecx,%edx
    1399:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    139d:	0f b6 49 06          	movzbl 0x6(%rcx),%ecx
    13a1:	48 03 14 c8          	add    (%rax,%rcx,8),%rdx
    13a5:	48 89 14 c8          	mov    %rdx,(%rax,%rcx,8)
    13a9:	e9 5d 00 00 00       	jmp    140b <_ZN7Machine12execute_codeERKSt6vectorI3AsmSaIS1_EE+0x1eb>
    13ae:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    13b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    13b6:	0f b6 40 06          	movzbl 0x6(%rax),%eax
    13ba:	48 8b 3c c6          	mov    (%rsi,%rax,8),%rdi
    13be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    13c2:	48 03 78 08          	add    0x8(%rax),%rdi
    13c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    13ca:	0f b6 40 05          	movzbl 0x5(%rax),%eax
    13ce:	48 c1 e0 03          	shl    $0x3,%rax
    13d2:	48 01 c6             	add    %rax,%rsi
    13d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    13d9:	0f b6 40 11          	movzbl 0x11(%rax),%eax
    13dd:	b9 08 00 00 00       	mov    $0x8,%ecx
    13e2:	99                   	cltd
    13e3:	f7 f9                	idiv   %ecx
    13e5:	48 63 d0             	movslq %eax,%rdx
    13e8:	e8 b3 fc ff ff       	call   10a0 <memcpy@plt>
    13ed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    13f1:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    13f5:	0f b6 49 04          	movzbl 0x4(%rcx),%ecx
    13f9:	89 ca                	mov    %ecx,%edx
    13fb:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    13ff:	0f b6 49 06          	movzbl 0x6(%rcx),%ecx
    1403:	48 03 14 c8          	add    (%rax,%rcx,8),%rdx
    1407:	48 89 14 c8          	mov    %rdx,(%rax,%rcx,8)
    140b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    140f:	48 8b 48 78          	mov    0x78(%rax),%rcx
    1413:	48 83 c1 01          	add    $0x1,%rcx
    1417:	48 89 48 78          	mov    %rcx,0x78(%rax)
    141b:	e9 20 fe ff ff       	jmp    1240 <_ZN7Machine12execute_codeERKSt6vectorI3AsmSaIS1_EE+0x20>
    1420:	48 83 c4 30          	add    $0x30,%rsp
    1424:	5d                   	pop    %rbp
    1425:	c3                   	ret
    1426:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    142d:	00 00 00 

0000000000001430 <_ZNKSt6vectorI3AsmSaIS0_EE4sizeEv>:
    1430:	55                   	push   %rbp
    1431:	48 89 e5             	mov    %rsp,%rbp
    1434:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1438:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    143c:	48 8b 41 08          	mov    0x8(%rcx),%rax
    1440:	48 8b 09             	mov    (%rcx),%rcx
    1443:	48 29 c8             	sub    %rcx,%rax
    1446:	b9 18 00 00 00       	mov    $0x18,%ecx
    144b:	48 99                	cqto
    144d:	48 f7 f9             	idiv   %rcx
    1450:	5d                   	pop    %rbp
    1451:	c3                   	ret
    1452:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    1459:	00 00 00 
    145c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001460 <_ZNKSt6vectorI3AsmSaIS0_EEixEm>:
    1460:	55                   	push   %rbp
    1461:	48 89 e5             	mov    %rsp,%rbp
    1464:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1468:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    146c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1470:	48 8b 00             	mov    (%rax),%rax
    1473:	48 6b 4d f0 18       	imul   $0x18,-0x10(%rbp),%rcx
    1478:	48 01 c8             	add    %rcx,%rax
    147b:	5d                   	pop    %rbp
    147c:	c3                   	ret
    147d:	0f 1f 00             	nopl   (%rax)

0000000000001480 <main>:
    1480:	55                   	push   %rbp
    1481:	48 89 e5             	mov    %rsp,%rbp
    1484:	48 81 ec c0 81 00 00 	sub    $0x81c0,%rsp
    148b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1492:	00 00 
    1494:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1498:	c7 85 b4 7e ff ff 00 	movl   $0x0,-0x814c(%rbp)
    149f:	00 00 00 
    14a2:	89 bd b0 7e ff ff    	mov    %edi,-0x8150(%rbp)
    14a8:	48 89 b5 a8 7e ff ff 	mov    %rsi,-0x8158(%rbp)
    14af:	48 c7 85 f8 7e ff ff 	movq   $0x0,-0x8108(%rbp)
    14b6:	00 00 00 00 
    14ba:	48 89 e0             	mov    %rsp,%rax
    14bd:	c7 00 40 00 00 00    	movl   $0x40,(%rax)
    14c3:	48 8d 7d 80          	lea    -0x80(%rbp),%rdi
    14c7:	48 89 bd 60 7e ff ff 	mov    %rdi,-0x81a0(%rbp)
    14ce:	b9 03 00 00 00       	mov    $0x3,%ecx
    14d3:	89 8d 54 7e ff ff    	mov    %ecx,-0x81ac(%rbp)
    14d9:	45 31 c0             	xor    %r8d,%r8d
    14dc:	44 89 85 5c 7e ff ff 	mov    %r8d,-0x81a4(%rbp)
    14e3:	41 b9 34 12 00 00    	mov    $0x1234,%r9d
    14e9:	44 89 c6             	mov    %r8d,%esi
    14ec:	89 ca                	mov    %ecx,%edx
    14ee:	e8 fd 02 00 00       	call   17f0 <_ZN3AsmC2ENS_4KindEhhhmh>
    14f3:	44 8b 85 54 7e ff ff 	mov    -0x81ac(%rbp),%r8d
    14fa:	48 8d 7d 98          	lea    -0x68(%rbp),%rdi
    14fe:	be 01 00 00 00       	mov    $0x1,%esi
    1503:	89 b5 58 7e ff ff    	mov    %esi,-0x81a8(%rbp)
    1509:	44 89 c2             	mov    %r8d,%edx
    150c:	44 89 c1             	mov    %r8d,%ecx
    150f:	e8 3c 03 00 00       	call   1850 <_ZN3AsmC2ENS_4KindEhhh>
    1514:	44 8b 85 5c 7e ff ff 	mov    -0x81a4(%rbp),%r8d
    151b:	48 8d 7d b0          	lea    -0x50(%rbp),%rdi
    151f:	48 89 e0             	mov    %rsp,%rax
    1522:	c7 00 40 00 00 00    	movl   $0x40,(%rax)
    1528:	4c 8d 8d f8 7e ff ff 	lea    -0x8108(%rbp),%r9
    152f:	44 89 c6             	mov    %r8d,%esi
    1532:	44 89 c2             	mov    %r8d,%edx
    1535:	44 89 c1             	mov    %r8d,%ecx
    1538:	e8 b3 02 00 00       	call   17f0 <_ZN3AsmC2ENS_4KindEhhhmh>
    153d:	8b 8d 54 7e ff ff    	mov    -0x81ac(%rbp),%ecx
    1543:	44 8b 85 5c 7e ff ff 	mov    -0x81a4(%rbp),%r8d
    154a:	48 8d 7d c8          	lea    -0x38(%rbp),%rdi
    154e:	48 89 e0             	mov    %rsp,%rax
    1551:	c7 00 40 00 00 00    	movl   $0x40,(%rax)
    1557:	be 08 00 00 00       	mov    $0x8,%esi
    155c:	41 b9 08 00 00 00    	mov    $0x8,%r9d
    1562:	44 89 c2             	mov    %r8d,%edx
    1565:	e8 86 02 00 00       	call   17f0 <_ZN3AsmC2ENS_4KindEhhhmh>
    156a:	8b 8d 58 7e ff ff    	mov    -0x81a8(%rbp),%ecx
    1570:	44 8b 85 5c 7e ff ff 	mov    -0x81a4(%rbp),%r8d
    1577:	48 8d 7d e0          	lea    -0x20(%rbp),%rdi
    157b:	48 89 e0             	mov    %rsp,%rax
    157e:	c7 00 08 00 00 00    	movl   $0x8,(%rax)
    1584:	45 89 c1             	mov    %r8d,%r9d
    1587:	be 07 00 00 00       	mov    $0x7,%esi
    158c:	44 89 c2             	mov    %r8d,%edx
    158f:	e8 5c 02 00 00       	call   17f0 <_ZN3AsmC2ENS_4KindEhhhmh>
    1594:	48 8b 85 60 7e ff ff 	mov    -0x81a0(%rbp),%rax
    159b:	48 89 85 98 7e ff ff 	mov    %rax,-0x8168(%rbp)
    15a2:	48 c7 85 a0 7e ff ff 	movq   $0x5,-0x8160(%rbp)
    15a9:	05 00 00 00 
    15ad:	48 8d 8d d8 7e ff ff 	lea    -0x8128(%rbp),%rcx
    15b4:	48 89 8d b8 7e ff ff 	mov    %rcx,-0x8148(%rbp)
    15bb:	48 8b 85 b8 7e ff ff 	mov    -0x8148(%rbp),%rax
    15c2:	48 89 85 d0 7e ff ff 	mov    %rax,-0x8130(%rbp)
    15c9:	48 8b b5 98 7e ff ff 	mov    -0x8168(%rbp),%rsi
    15d0:	48 8b 95 a0 7e ff ff 	mov    -0x8160(%rbp),%rdx
    15d7:	48 8d bd e0 7e ff ff 	lea    -0x8120(%rbp),%rdi
    15de:	e8 bd 02 00 00       	call   18a0 <_ZNSt6vectorI3AsmSaIS0_EEC2ESt16initializer_listIS0_ERKS1_>
    15e3:	e9 00 00 00 00       	jmp    15e8 <main+0x168>
    15e8:	48 8d 85 d8 7e ff ff 	lea    -0x8128(%rbp),%rax
    15ef:	48 89 85 c0 7e ff ff 	mov    %rax,-0x8140(%rbp)
    15f6:	48 8d bd 00 7f ff ff 	lea    -0x8100(%rbp),%rdi
    15fd:	e8 6e 03 00 00       	call   1970 <_ZN7MachineC2Ev>
    1602:	e9 00 00 00 00       	jmp    1607 <main+0x187>
    1607:	48 8d bd 00 7f ff ff 	lea    -0x8100(%rbp),%rdi
    160e:	48 8d b5 e0 7e ff ff 	lea    -0x8120(%rbp),%rsi
    1615:	e8 06 fc ff ff       	call   1220 <_ZN7Machine12execute_codeERKSt6vectorI3AsmSaIS1_EE>
    161a:	e9 00 00 00 00       	jmp    161f <main+0x19f>
    161f:	c7 85 88 7e ff ff 00 	movl   $0x0,-0x8178(%rbp)
    1626:	00 00 00 
    1629:	48 8d 85 00 7f ff ff 	lea    -0x8100(%rbp),%rax
    1630:	48 89 85 80 7e ff ff 	mov    %rax,-0x8180(%rbp)
    1637:	48 8b 85 80 7e ff ff 	mov    -0x8180(%rbp),%rax
    163e:	48 89 85 78 7e ff ff 	mov    %rax,-0x8188(%rbp)
    1645:	48 8b 85 80 7e ff ff 	mov    -0x8180(%rbp),%rax
    164c:	48 05 80 00 00 00    	add    $0x80,%rax
    1652:	48 89 85 70 7e ff ff 	mov    %rax,-0x8190(%rbp)
    1659:	48 8b 85 78 7e ff ff 	mov    -0x8188(%rbp),%rax
    1660:	48 3b 85 70 7e ff ff 	cmp    -0x8190(%rbp),%rax
    1667:	0f 84 cd 00 00 00    	je     173a <main+0x2ba>
    166d:	48 8b 85 78 7e ff ff 	mov    -0x8188(%rbp),%rax
    1674:	48 89 85 68 7e ff ff 	mov    %rax,-0x8198(%rbp)
    167b:	8b b5 88 7e ff ff    	mov    -0x8178(%rbp),%esi
    1681:	89 f0                	mov    %esi,%eax
    1683:	83 e8 0a             	sub    $0xa,%eax
    1686:	48 8d 05 a9 19 00 00 	lea    0x19a9(%rip),%rax        # 3036 <_IO_stdin_used+0x36>
    168d:	48 8d 15 a1 19 00 00 	lea    0x19a1(%rip),%rdx        # 3035 <_IO_stdin_used+0x35>
    1694:	48 0f 4c d0          	cmovl  %rax,%rdx
    1698:	48 8b 85 68 7e ff ff 	mov    -0x8198(%rbp),%rax
    169f:	48 8b 08             	mov    (%rax),%rcx
    16a2:	48 8d 3d 7f 19 00 00 	lea    0x197f(%rip),%rdi        # 3028 <_IO_stdin_used+0x28>
    16a9:	31 c0                	xor    %eax,%eax
    16ab:	e8 80 f9 ff ff       	call   1030 <printf@plt>
    16b0:	e9 00 00 00 00       	jmp    16b5 <main+0x235>
    16b5:	8b 85 88 7e ff ff    	mov    -0x8178(%rbp),%eax
    16bb:	83 c0 01             	add    $0x1,%eax
    16be:	89 85 88 7e ff ff    	mov    %eax,-0x8178(%rbp)
    16c4:	48 8b 85 78 7e ff ff 	mov    -0x8188(%rbp),%rax
    16cb:	48 83 c0 08          	add    $0x8,%rax
    16cf:	48 89 85 78 7e ff ff 	mov    %rax,-0x8188(%rbp)
    16d6:	e9 7e ff ff ff       	jmp    1659 <main+0x1d9>
    16db:	48 89 c1             	mov    %rax,%rcx
    16de:	89 d0                	mov    %edx,%eax
    16e0:	48 89 8d 90 7e ff ff 	mov    %rcx,-0x8170(%rbp)
    16e7:	89 85 8c 7e ff ff    	mov    %eax,-0x8174(%rbp)
    16ed:	48 8d 85 d8 7e ff ff 	lea    -0x8128(%rbp),%rax
    16f4:	48 89 85 c8 7e ff ff 	mov    %rax,-0x8138(%rbp)
    16fb:	e9 ba 00 00 00       	jmp    17ba <main+0x33a>
    1700:	48 89 c1             	mov    %rax,%rcx
    1703:	89 d0                	mov    %edx,%eax
    1705:	48 89 8d 90 7e ff ff 	mov    %rcx,-0x8170(%rbp)
    170c:	89 85 8c 7e ff ff    	mov    %eax,-0x8174(%rbp)
    1712:	e9 97 00 00 00       	jmp    17ae <main+0x32e>
    1717:	48 89 c1             	mov    %rax,%rcx
    171a:	89 d0                	mov    %edx,%eax
    171c:	48 89 8d 90 7e ff ff 	mov    %rcx,-0x8170(%rbp)
    1723:	89 85 8c 7e ff ff    	mov    %eax,-0x8174(%rbp)
    1729:	48 8d bd 00 7f ff ff 	lea    -0x8100(%rbp),%rdi
    1730:	e8 6b 02 00 00       	call   19a0 <_ZN7MachineD2Ev>
    1735:	e9 74 00 00 00       	jmp    17ae <main+0x32e>
    173a:	48 8d 3d f4 18 00 00 	lea    0x18f4(%rip),%rdi        # 3035 <_IO_stdin_used+0x35>
    1741:	e8 aa f9 ff ff       	call   10f0 <puts@plt>
    1746:	e9 00 00 00 00       	jmp    174b <main+0x2cb>
    174b:	48 8b b5 f8 7e ff ff 	mov    -0x8108(%rbp),%rsi
    1752:	48 8d 3d df 18 00 00 	lea    0x18df(%rip),%rdi        # 3038 <_IO_stdin_used+0x38>
    1759:	31 c0                	xor    %eax,%eax
    175b:	e8 d0 f8 ff ff       	call   1030 <printf@plt>
    1760:	e9 00 00 00 00       	jmp    1765 <main+0x2e5>
    1765:	48 8d bd 00 7f ff ff 	lea    -0x8100(%rbp),%rdi
    176c:	e8 2f 02 00 00       	call   19a0 <_ZN7MachineD2Ev>
    1771:	48 8d bd e0 7e ff ff 	lea    -0x8120(%rbp),%rdi
    1778:	e8 33 02 00 00       	call   19b0 <_ZNSt6vectorI3AsmSaIS0_EED2Ev>
    177d:	8b 85 b4 7e ff ff    	mov    -0x814c(%rbp),%eax
    1783:	89 85 50 7e ff ff    	mov    %eax,-0x81b0(%rbp)
    1789:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1790:	00 00 
    1792:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    1796:	48 39 c8             	cmp    %rcx,%rax
    1799:	0f 85 4b 00 00 00    	jne    17ea <main+0x36a>
    179f:	8b 85 50 7e ff ff    	mov    -0x81b0(%rbp),%eax
    17a5:	48 81 c4 c0 81 00 00 	add    $0x81c0,%rsp
    17ac:	5d                   	pop    %rbp
    17ad:	c3                   	ret
    17ae:	48 8d bd e0 7e ff ff 	lea    -0x8120(%rbp),%rdi
    17b5:	e8 f6 01 00 00       	call   19b0 <_ZNSt6vectorI3AsmSaIS0_EED2Ev>
    17ba:	48 8b 85 90 7e ff ff 	mov    -0x8170(%rbp),%rax
    17c1:	48 89 85 48 7e ff ff 	mov    %rax,-0x81b8(%rbp)
    17c8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    17cf:	00 00 
    17d1:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    17d5:	48 39 c8             	cmp    %rcx,%rax
    17d8:	0f 85 0c 00 00 00    	jne    17ea <main+0x36a>
    17de:	48 8b bd 48 7e ff ff 	mov    -0x81b8(%rbp),%rdi
    17e5:	e8 26 f9 ff ff       	call   1110 <_Unwind_Resume@plt>
    17ea:	e8 e1 f8 ff ff       	call   10d0 <__stack_chk_fail@plt>
    17ef:	90                   	nop

00000000000017f0 <_ZN3AsmC2ENS_4KindEhhhmh>:
    17f0:	55                   	push   %rbp
    17f1:	48 89 e5             	mov    %rsp,%rbp
    17f4:	48 83 ec 20          	sub    $0x20,%rsp
    17f8:	44 88 c0             	mov    %r8b,%al
    17fb:	44 8a 45 10          	mov    0x10(%rbp),%r8b
    17ff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1803:	89 75 f4             	mov    %esi,-0xc(%rbp)
    1806:	88 55 f3             	mov    %dl,-0xd(%rbp)
    1809:	88 4d f2             	mov    %cl,-0xe(%rbp)
    180c:	88 45 f1             	mov    %al,-0xf(%rbp)
    180f:	4c 89 4d e8          	mov    %r9,-0x18(%rbp)
    1813:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
    1817:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
    181b:	8b 75 f4             	mov    -0xc(%rbp),%esi
    181e:	8a 4d f3             	mov    -0xd(%rbp),%cl
    1821:	8a 45 f2             	mov    -0xe(%rbp),%al
    1824:	0f b6 d1             	movzbl %cl,%edx
    1827:	0f b6 c8             	movzbl %al,%ecx
    182a:	44 0f b6 45 f1       	movzbl -0xf(%rbp),%r8d
    182f:	e8 1c 00 00 00       	call   1850 <_ZN3AsmC2ENS_4KindEhhh>
    1834:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1838:	c6 40 10 01          	movb   $0x1,0x10(%rax)
    183c:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    1840:	48 89 48 08          	mov    %rcx,0x8(%rax)
    1844:	8a 4d 10             	mov    0x10(%rbp),%cl
    1847:	88 48 11             	mov    %cl,0x11(%rax)
    184a:	48 83 c4 20          	add    $0x20,%rsp
    184e:	5d                   	pop    %rbp
    184f:	c3                   	ret

0000000000001850 <_ZN3AsmC2ENS_4KindEhhh>:
    1850:	55                   	push   %rbp
    1851:	48 89 e5             	mov    %rsp,%rbp
    1854:	44 88 c0             	mov    %r8b,%al
    1857:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    185b:	89 75 f4             	mov    %esi,-0xc(%rbp)
    185e:	88 55 f3             	mov    %dl,-0xd(%rbp)
    1861:	88 4d f2             	mov    %cl,-0xe(%rbp)
    1864:	88 45 f1             	mov    %al,-0xf(%rbp)
    1867:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    186b:	8b 4d f4             	mov    -0xc(%rbp),%ecx
    186e:	89 08                	mov    %ecx,(%rax)
    1870:	8a 4d f3             	mov    -0xd(%rbp),%cl
    1873:	88 48 04             	mov    %cl,0x4(%rax)
    1876:	8a 4d f2             	mov    -0xe(%rbp),%cl
    1879:	88 48 05             	mov    %cl,0x5(%rax)
    187c:	8a 4d f1             	mov    -0xf(%rbp),%cl
    187f:	88 48 06             	mov    %cl,0x6(%rax)
    1882:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    1889:	00 
    188a:	c6 40 10 00          	movb   $0x0,0x10(%rax)
    188e:	c6 40 11 00          	movb   $0x0,0x11(%rax)
    1892:	5d                   	pop    %rbp
    1893:	c3                   	ret
    1894:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    189b:	00 00 00 
    189e:	66 90                	xchg   %ax,%ax

00000000000018a0 <_ZNSt6vectorI3AsmSaIS0_EEC2ESt16initializer_listIS0_ERKS1_>:
    18a0:	55                   	push   %rbp
    18a1:	48 89 e5             	mov    %rsp,%rbp
    18a4:	48 83 ec 70          	sub    $0x70,%rsp
    18a8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    18af:	00 00 
    18b1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    18b5:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
    18b9:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    18bd:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
    18c1:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
    18c5:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    18c9:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    18cd:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    18d1:	e8 4a 01 00 00       	call   1a20 <_ZNSt12_Vector_baseI3AsmSaIS0_EEC2ERKS1_>
    18d6:	48 8d 7d e8          	lea    -0x18(%rbp),%rdi
    18da:	48 89 7d a0          	mov    %rdi,-0x60(%rbp)
    18de:	e8 8d 02 00 00       	call   1b70 <_ZNKSt16initializer_listI3AsmE5beginEv>
    18e3:	48 8b 7d a0          	mov    -0x60(%rbp),%rdi
    18e7:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    18eb:	e8 a0 02 00 00       	call   1b90 <_ZNKSt16initializer_listI3AsmE3endEv>
    18f0:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    18f4:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
    18f8:	48 89 c2             	mov    %rax,%rdx
    18fb:	e8 50 01 00 00       	call   1a50 <_ZNSt6vectorI3AsmSaIS0_EE19_M_range_initializeIPKS0_EEvT_S6_St20forward_iterator_tag>
    1900:	e9 00 00 00 00       	jmp    1905 <_ZNSt6vectorI3AsmSaIS0_EEC2ESt16initializer_listIS0_ERKS1_+0x65>
    1905:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    190c:	00 00 
    190e:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    1912:	48 39 c8             	cmp    %rcx,%rax
    1915:	0f 85 42 00 00 00    	jne    195d <_ZNSt6vectorI3AsmSaIS0_EEC2ESt16initializer_listIS0_ERKS1_+0xbd>
    191b:	48 83 c4 70          	add    $0x70,%rsp
    191f:	5d                   	pop    %rbp
    1920:	c3                   	ret
    1921:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    1925:	48 89 c1             	mov    %rax,%rcx
    1928:	89 d0                	mov    %edx,%eax
    192a:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
    192e:	89 45 bc             	mov    %eax,-0x44(%rbp)
    1931:	e8 9a 02 00 00       	call   1bd0 <_ZNSt12_Vector_baseI3AsmSaIS0_EED2Ev>
    1936:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    193a:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    193e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1945:	00 00 
    1947:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    194b:	48 39 c8             	cmp    %rcx,%rax
    194e:	0f 85 09 00 00 00    	jne    195d <_ZNSt6vectorI3AsmSaIS0_EEC2ESt16initializer_listIS0_ERKS1_+0xbd>
    1954:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
    1958:	e8 b3 f7 ff ff       	call   1110 <_Unwind_Resume@plt>
    195d:	e8 6e f7 ff ff       	call   10d0 <__stack_chk_fail@plt>
    1962:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    1969:	00 00 00 
    196c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001970 <_ZN7MachineC2Ev>:
    1970:	55                   	push   %rbp
    1971:	48 89 e5             	mov    %rsp,%rbp
    1974:	48 83 ec 10          	sub    $0x10,%rsp
    1978:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    197c:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
    1980:	31 f6                	xor    %esi,%esi
    1982:	ba 80 00 00 00       	mov    $0x80,%edx
    1987:	e8 f4 f6 ff ff       	call   1080 <memset@plt>
    198c:	48 83 c4 10          	add    $0x10,%rsp
    1990:	5d                   	pop    %rbp
    1991:	c3                   	ret
    1992:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    1999:	00 00 00 
    199c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000019a0 <_ZN7MachineD2Ev>:
    19a0:	55                   	push   %rbp
    19a1:	48 89 e5             	mov    %rsp,%rbp
    19a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    19a8:	5d                   	pop    %rbp
    19a9:	c3                   	ret
    19aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000019b0 <_ZNSt6vectorI3AsmSaIS0_EED2Ev>:
    19b0:	55                   	push   %rbp
    19b1:	48 89 e5             	mov    %rsp,%rbp
    19b4:	48 83 ec 40          	sub    $0x40,%rsp
    19b8:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
    19bc:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    19c0:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    19c4:	48 8b 07             	mov    (%rdi),%rax
    19c7:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    19cb:	48 8b 47 08          	mov    0x8(%rdi),%rax
    19cf:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    19d3:	e8 08 04 00 00       	call   1de0 <_ZNSt12_Vector_baseI3AsmSaIS0_EE19_M_get_Tp_allocatorEv>
    19d8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    19dc:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    19e0:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
    19e4:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
    19e8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    19ec:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
    19f0:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    19f4:	e8 e7 06 00 00       	call   20e0 <_ZSt8_DestroyIP3AsmEvT_S2_>
    19f9:	e9 00 00 00 00       	jmp    19fe <_ZNSt6vectorI3AsmSaIS0_EED2Ev+0x4e>
    19fe:	e9 00 00 00 00       	jmp    1a03 <_ZNSt6vectorI3AsmSaIS0_EED2Ev+0x53>
    1a03:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    1a07:	e8 c4 01 00 00       	call   1bd0 <_ZNSt12_Vector_baseI3AsmSaIS0_EED2Ev>
    1a0c:	48 83 c4 40          	add    $0x40,%rsp
    1a10:	5d                   	pop    %rbp
    1a11:	c3                   	ret
    1a12:	48 89 c7             	mov    %rax,%rdi
    1a15:	e8 46 05 00 00       	call   1f60 <__clang_call_terminate>
    1a1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000001a20 <_ZNSt12_Vector_baseI3AsmSaIS0_EEC2ERKS1_>:
    1a20:	55                   	push   %rbp
    1a21:	48 89 e5             	mov    %rsp,%rbp
    1a24:	48 83 ec 10          	sub    $0x10,%rsp
    1a28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1a2c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    1a30:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
    1a34:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    1a38:	e8 f3 01 00 00       	call   1c30 <_ZNSt12_Vector_baseI3AsmSaIS0_EE12_Vector_implC2ERKS1_>
    1a3d:	48 83 c4 10          	add    $0x10,%rsp
    1a41:	5d                   	pop    %rbp
    1a42:	c3                   	ret
    1a43:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    1a4a:	00 00 00 
    1a4d:	0f 1f 00             	nopl   (%rax)

0000000000001a50 <_ZNSt6vectorI3AsmSaIS0_EE19_M_range_initializeIPKS0_EEvT_S6_St20forward_iterator_tag>:
    1a50:	55                   	push   %rbp
    1a51:	48 89 e5             	mov    %rsp,%rbp
    1a54:	48 81 ec 80 00 00 00 	sub    $0x80,%rsp
    1a5b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1a62:	00 00 
    1a64:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1a68:	48 89 7d c0          	mov    %rdi,-0x40(%rbp)
    1a6c:	48 89 75 b8          	mov    %rsi,-0x48(%rbp)
    1a70:	48 89 55 b0          	mov    %rdx,-0x50(%rbp)
    1a74:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
    1a78:	48 89 7d a0          	mov    %rdi,-0x60(%rbp)
    1a7c:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    1a80:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    1a84:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
    1a88:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    1a8c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    1a90:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1a94:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    1a98:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    1a9c:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    1aa0:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    1aa4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1aa8:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    1aac:	48 29 c8             	sub    %rcx,%rax
    1aaf:	48 c1 f8 03          	sar    $0x3,%rax
    1ab3:	48 b9 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rcx
    1aba:	aa aa aa 
    1abd:	48 0f af c1          	imul   %rcx,%rax
    1ac1:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    1ac5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    1ac9:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    1acd:	e8 0e 03 00 00       	call   1de0 <_ZNSt12_Vector_baseI3AsmSaIS0_EE19_M_get_Tp_allocatorEv>
    1ad2:	48 8b 7d 80          	mov    -0x80(%rbp),%rdi
    1ad6:	48 89 c6             	mov    %rax,%rsi
    1ad9:	e8 42 02 00 00       	call   1d20 <_ZNSt6vectorI3AsmSaIS0_EE17_S_check_init_lenEmRKS1_>
    1ade:	48 8b 7d a0          	mov    -0x60(%rbp),%rdi
    1ae2:	48 89 c6             	mov    %rax,%rsi
    1ae5:	e8 b6 01 00 00       	call   1ca0 <_ZNSt12_Vector_baseI3AsmSaIS0_EE11_M_allocateEm>
    1aea:	48 8b 7d a0          	mov    -0x60(%rbp),%rdi
    1aee:	48 89 07             	mov    %rax,(%rdi)
    1af1:	48 8b 07             	mov    (%rdi),%rax
    1af4:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
    1af8:	48 8d 0c 49          	lea    (%rcx,%rcx,2),%rcx
    1afc:	48 8d 04 c8          	lea    (%rax,%rcx,8),%rax
    1b00:	48 89 47 10          	mov    %rax,0x10(%rdi)
    1b04:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1b08:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    1b0c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    1b10:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    1b14:	48 8b 07             	mov    (%rdi),%rax
    1b17:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    1b1b:	e8 c0 02 00 00       	call   1de0 <_ZNSt12_Vector_baseI3AsmSaIS0_EE19_M_get_Tp_allocatorEv>
    1b20:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
    1b24:	48 8b 75 90          	mov    -0x70(%rbp),%rsi
    1b28:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    1b2c:	48 89 c1             	mov    %rax,%rcx
    1b2f:	e8 bc 02 00 00       	call   1df0 <_ZSt22__uninitialized_copy_aIPK3AsmPS0_S0_ET0_T_S5_S4_RSaIT1_E>
    1b34:	48 89 c1             	mov    %rax,%rcx
    1b37:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    1b3b:	48 89 48 08          	mov    %rcx,0x8(%rax)
    1b3f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1b46:	00 00 
    1b48:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    1b4c:	48 39 c8             	cmp    %rcx,%rax
    1b4f:	0f 85 09 00 00 00    	jne    1b5e <_ZNSt6vectorI3AsmSaIS0_EE19_M_range_initializeIPKS0_EEvT_S6_St20forward_iterator_tag+0x10e>
    1b55:	48 81 c4 80 00 00 00 	add    $0x80,%rsp
    1b5c:	5d                   	pop    %rbp
    1b5d:	c3                   	ret
    1b5e:	e8 6d f5 ff ff       	call   10d0 <__stack_chk_fail@plt>
    1b63:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    1b6a:	00 00 00 
    1b6d:	0f 1f 00             	nopl   (%rax)

0000000000001b70 <_ZNKSt16initializer_listI3AsmE5beginEv>:
    1b70:	55                   	push   %rbp
    1b71:	48 89 e5             	mov    %rsp,%rbp
    1b74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1b78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1b7c:	48 8b 00             	mov    (%rax),%rax
    1b7f:	5d                   	pop    %rbp
    1b80:	c3                   	ret
    1b81:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    1b88:	00 00 00 
    1b8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001b90 <_ZNKSt16initializer_listI3AsmE3endEv>:
    1b90:	55                   	push   %rbp
    1b91:	48 89 e5             	mov    %rsp,%rbp
    1b94:	48 83 ec 20          	sub    $0x20,%rsp
    1b98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1b9c:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
    1ba0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1ba4:	e8 c7 ff ff ff       	call   1b70 <_ZNKSt16initializer_listI3AsmE5beginEv>
    1ba9:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
    1bad:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1bb1:	e8 6a 05 00 00       	call   2120 <_ZNKSt16initializer_listI3AsmE4sizeEv>
    1bb6:	48 89 c1             	mov    %rax,%rcx
    1bb9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1bbd:	48 6b c9 18          	imul   $0x18,%rcx,%rcx
    1bc1:	48 01 c8             	add    %rcx,%rax
    1bc4:	48 83 c4 20          	add    $0x20,%rsp
    1bc8:	5d                   	pop    %rbp
    1bc9:	c3                   	ret
    1bca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000001bd0 <_ZNSt12_Vector_baseI3AsmSaIS0_EED2Ev>:
    1bd0:	55                   	push   %rbp
    1bd1:	48 89 e5             	mov    %rsp,%rbp
    1bd4:	48 83 ec 10          	sub    $0x10,%rsp
    1bd8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1bdc:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
    1be0:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
    1be4:	48 8b 37             	mov    (%rdi),%rsi
    1be7:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    1beb:	48 29 f2             	sub    %rsi,%rdx
    1bee:	48 c1 fa 03          	sar    $0x3,%rdx
    1bf2:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    1bf9:	aa aa aa 
    1bfc:	48 0f af d0          	imul   %rax,%rdx
    1c00:	e8 3b 05 00 00       	call   2140 <_ZNSt12_Vector_baseI3AsmSaIS0_EE13_M_deallocateEPS0_m>
    1c05:	e9 00 00 00 00       	jmp    1c0a <_ZNSt12_Vector_baseI3AsmSaIS0_EED2Ev+0x3a>
    1c0a:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
    1c0e:	e8 9d 05 00 00       	call   21b0 <_ZNSt12_Vector_baseI3AsmSaIS0_EE12_Vector_implD2Ev>
    1c13:	48 83 c4 10          	add    $0x10,%rsp
    1c17:	5d                   	pop    %rbp
    1c18:	c3                   	ret
    1c19:	48 89 c7             	mov    %rax,%rdi
    1c1c:	e8 3f 03 00 00       	call   1f60 <__clang_call_terminate>
    1c21:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    1c28:	00 00 00 
    1c2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001c30 <_ZNSt12_Vector_baseI3AsmSaIS0_EE12_Vector_implC2ERKS1_>:
    1c30:	55                   	push   %rbp
    1c31:	48 89 e5             	mov    %rsp,%rbp
    1c34:	48 83 ec 30          	sub    $0x30,%rsp
    1c38:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    1c3c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    1c40:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
    1c44:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1c48:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1c4c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1c50:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    1c54:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1c58:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
    1c5c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1c60:	e8 0b 00 00 00       	call   1c70 <_ZNSt12_Vector_baseI3AsmSaIS0_EE17_Vector_impl_dataC2Ev>
    1c65:	48 83 c4 30          	add    $0x30,%rsp
    1c69:	5d                   	pop    %rbp
    1c6a:	c3                   	ret
    1c6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001c70 <_ZNSt12_Vector_baseI3AsmSaIS0_EE17_Vector_impl_dataC2Ev>:
    1c70:	55                   	push   %rbp
    1c71:	48 89 e5             	mov    %rsp,%rbp
    1c74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1c78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1c7c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    1c83:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    1c8a:	00 
    1c8b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    1c92:	00 
    1c93:	5d                   	pop    %rbp
    1c94:	c3                   	ret
    1c95:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    1c9c:	00 00 00 
    1c9f:	90                   	nop

0000000000001ca0 <_ZNSt12_Vector_baseI3AsmSaIS0_EE11_M_allocateEm>:
    1ca0:	55                   	push   %rbp
    1ca1:	48 89 e5             	mov    %rsp,%rbp
    1ca4:	48 83 ec 40          	sub    $0x40,%rsp
    1ca8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    1cac:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    1cb0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1cb4:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    1cb8:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    1cbd:	0f 84 3a 00 00 00    	je     1cfd <_ZNSt12_Vector_baseI3AsmSaIS0_EE11_M_allocateEm+0x5d>
    1cc3:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    1cc7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1ccb:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    1ccf:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1cd3:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    1cd7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1cdb:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
    1cdf:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1ce3:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
    1ce7:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    1ceb:	31 c0                	xor    %eax,%eax
    1ced:	89 c2                	mov    %eax,%edx
    1cef:	e8 2c 01 00 00       	call   1e20 <_ZNSt15__new_allocatorI3AsmE8allocateEmPKv>
    1cf4:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    1cf8:	e9 0b 00 00 00       	jmp    1d08 <_ZNSt12_Vector_baseI3AsmSaIS0_EE11_M_allocateEm+0x68>
    1cfd:	31 c0                	xor    %eax,%eax
    1cff:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    1d03:	e9 00 00 00 00       	jmp    1d08 <_ZNSt12_Vector_baseI3AsmSaIS0_EE11_M_allocateEm+0x68>
    1d08:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    1d0c:	48 83 c4 40          	add    $0x40,%rsp
    1d10:	5d                   	pop    %rbp
    1d11:	c3                   	ret
    1d12:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    1d19:	00 00 00 
    1d1c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001d20 <_ZNSt6vectorI3AsmSaIS0_EE17_S_check_init_lenEmRKS1_>:
    1d20:	55                   	push   %rbp
    1d21:	48 89 e5             	mov    %rsp,%rbp
    1d24:	48 83 ec 60          	sub    $0x60,%rsp
    1d28:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1d2f:	00 00 
    1d31:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1d35:	48 89 7d c0          	mov    %rdi,-0x40(%rbp)
    1d39:	48 89 75 b8          	mov    %rsi,-0x48(%rbp)
    1d3d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    1d41:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    1d45:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1d49:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
    1d4d:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
    1d51:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    1d55:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    1d59:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1d5d:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    1d61:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1d65:	48 8d 7d f0          	lea    -0x10(%rbp),%rdi
    1d69:	e8 22 01 00 00       	call   1e90 <_ZNSt6vectorI3AsmSaIS0_EE11_S_max_sizeERKS1_>
    1d6e:	48 89 c1             	mov    %rax,%rcx
    1d71:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    1d75:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    1d79:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    1d7d:	48 39 c8             	cmp    %rcx,%rax
    1d80:	0f 86 22 00 00 00    	jbe    1da8 <_ZNSt6vectorI3AsmSaIS0_EE17_S_check_init_lenEmRKS1_+0x88>
    1d86:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1d8d:	00 00 
    1d8f:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    1d93:	48 39 c8             	cmp    %rcx,%rax
    1d96:	0f 85 34 00 00 00    	jne    1dd0 <_ZNSt6vectorI3AsmSaIS0_EE17_S_check_init_lenEmRKS1_+0xb0>
    1d9c:	48 8d 3d a2 12 00 00 	lea    0x12a2(%rip),%rdi        # 3045 <_IO_stdin_used+0x45>
    1da3:	e8 c8 f2 ff ff       	call   1070 <_ZSt20__throw_length_errorPKc@plt>
    1da8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    1dac:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    1db0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1db7:	00 00 
    1db9:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    1dbd:	48 39 c8             	cmp    %rcx,%rax
    1dc0:	0f 85 0a 00 00 00    	jne    1dd0 <_ZNSt6vectorI3AsmSaIS0_EE17_S_check_init_lenEmRKS1_+0xb0>
    1dc6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    1dca:	48 83 c4 60          	add    $0x60,%rsp
    1dce:	5d                   	pop    %rbp
    1dcf:	c3                   	ret
    1dd0:	e8 fb f2 ff ff       	call   10d0 <__stack_chk_fail@plt>
    1dd5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    1ddc:	00 00 00 
    1ddf:	90                   	nop

0000000000001de0 <_ZNSt12_Vector_baseI3AsmSaIS0_EE19_M_get_Tp_allocatorEv>:
    1de0:	55                   	push   %rbp
    1de1:	48 89 e5             	mov    %rsp,%rbp
    1de4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1de8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1dec:	5d                   	pop    %rbp
    1ded:	c3                   	ret
    1dee:	66 90                	xchg   %ax,%ax

0000000000001df0 <_ZSt22__uninitialized_copy_aIPK3AsmPS0_S0_ET0_T_S5_S4_RSaIT1_E>:
    1df0:	55                   	push   %rbp
    1df1:	48 89 e5             	mov    %rsp,%rbp
    1df4:	48 83 ec 20          	sub    $0x20,%rsp
    1df8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1dfc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    1e00:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    1e04:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    1e08:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
    1e0c:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    1e10:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    1e14:	e8 57 01 00 00       	call   1f70 <_ZSt18uninitialized_copyIPK3AsmPS0_ET0_T_S5_S4_>
    1e19:	48 83 c4 20          	add    $0x20,%rsp
    1e1d:	5d                   	pop    %rbp
    1e1e:	c3                   	ret
    1e1f:	90                   	nop

0000000000001e20 <_ZNSt15__new_allocatorI3AsmE8allocateEmPKv>:
    1e20:	55                   	push   %rbp
    1e21:	48 89 e5             	mov    %rsp,%rbp
    1e24:	48 83 ec 20          	sub    $0x20,%rsp
    1e28:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
    1e2c:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
    1e30:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
    1e34:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    1e38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1e3c:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
    1e40:	48 b9 55 55 55 55 55 	movabs $0x555555555555555,%rcx
    1e47:	55 55 05 
    1e4a:	48 39 c8             	cmp    %rcx,%rax
    1e4d:	0f 86 1e 00 00 00    	jbe    1e71 <_ZNSt15__new_allocatorI3AsmE8allocateEmPKv+0x51>
    1e53:	48 b8 aa aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaa,%rax
    1e5a:	aa aa 0a 
    1e5d:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    1e61:	0f 86 05 00 00 00    	jbe    1e6c <_ZNSt15__new_allocatorI3AsmE8allocateEmPKv+0x4c>
    1e67:	e8 24 f2 ff ff       	call   1090 <_ZSt28__throw_bad_array_new_lengthv@plt>
    1e6c:	e8 df f1 ff ff       	call   1050 <_ZSt17__throw_bad_allocv@plt>
    1e71:	48 6b 7d e8 18       	imul   $0x18,-0x18(%rbp),%rdi
    1e76:	e8 45 f2 ff ff       	call   10c0 <_Znwm@plt>
    1e7b:	48 83 c4 20          	add    $0x20,%rsp
    1e7f:	5d                   	pop    %rbp
    1e80:	c3                   	ret
    1e81:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    1e88:	00 00 00 
    1e8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001e90 <_ZNSt6vectorI3AsmSaIS0_EE11_S_max_sizeERKS1_>:
    1e90:	55                   	push   %rbp
    1e91:	48 89 e5             	mov    %rsp,%rbp
    1e94:	48 83 ec 40          	sub    $0x40,%rsp
    1e98:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1e9f:	00 00 
    1ea1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1ea5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    1ea9:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    1eb0:	55 55 05 
    1eb3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1eb7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1ebb:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1ebf:	48 b8 aa aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaa,%rax
    1ec6:	aa aa 0a 
    1ec9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1ecd:	48 8d 7d f0          	lea    -0x10(%rbp),%rdi
    1ed1:	48 8d 75 e8          	lea    -0x18(%rbp),%rsi
    1ed5:	e8 46 00 00 00       	call   1f20 <_ZSt3minImERKT_S2_S2_>
    1eda:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    1ede:	e9 00 00 00 00       	jmp    1ee3 <_ZNSt6vectorI3AsmSaIS0_EE11_S_max_sizeERKS1_+0x53>
    1ee3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1ee7:	48 8b 00             	mov    (%rax),%rax
    1eea:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    1eee:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1ef5:	00 00 
    1ef7:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    1efb:	48 39 c8             	cmp    %rcx,%rax
    1efe:	0f 85 12 00 00 00    	jne    1f16 <_ZNSt6vectorI3AsmSaIS0_EE11_S_max_sizeERKS1_+0x86>
    1f04:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1f08:	48 83 c4 40          	add    $0x40,%rsp
    1f0c:	5d                   	pop    %rbp
    1f0d:	c3                   	ret
    1f0e:	48 89 c7             	mov    %rax,%rdi
    1f11:	e8 4a 00 00 00       	call   1f60 <__clang_call_terminate>
    1f16:	e8 b5 f1 ff ff       	call   10d0 <__stack_chk_fail@plt>
    1f1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001f20 <_ZSt3minImERKT_S2_S2_>:
    1f20:	55                   	push   %rbp
    1f21:	48 89 e5             	mov    %rsp,%rbp
    1f24:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
    1f28:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
    1f2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1f30:	48 8b 00             	mov    (%rax),%rax
    1f33:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    1f37:	48 3b 01             	cmp    (%rcx),%rax
    1f3a:	0f 83 0d 00 00 00    	jae    1f4d <_ZSt3minImERKT_S2_S2_+0x2d>
    1f40:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1f44:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1f48:	e9 08 00 00 00       	jmp    1f55 <_ZSt3minImERKT_S2_S2_+0x35>
    1f4d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1f51:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1f55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1f59:	5d                   	pop    %rbp
    1f5a:	c3                   	ret
    1f5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001f60 <__clang_call_terminate>:
    1f60:	55                   	push   %rbp
    1f61:	48 89 e5             	mov    %rsp,%rbp
    1f64:	e8 f7 f0 ff ff       	call   1060 <__cxa_begin_catch@plt>
    1f69:	e8 d2 f0 ff ff       	call   1040 <_ZSt9terminatev@plt>
    1f6e:	66 90                	xchg   %ax,%ax

0000000000001f70 <_ZSt18uninitialized_copyIPK3AsmPS0_ET0_T_S5_S4_>:
    1f70:	55                   	push   %rbp
    1f71:	48 89 e5             	mov    %rsp,%rbp
    1f74:	48 83 ec 20          	sub    $0x20,%rsp
    1f78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1f7c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    1f80:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    1f84:	c6 45 e7 00          	movb   $0x0,-0x19(%rbp)
    1f88:	c6 45 e6 00          	movb   $0x0,-0x1a(%rbp)
    1f8c:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
    1f90:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    1f94:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    1f98:	e8 13 00 00 00       	call   1fb0 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPK3AsmPS2_EET0_T_S7_S6_>
    1f9d:	48 83 c4 20          	add    $0x20,%rsp
    1fa1:	5d                   	pop    %rbp
    1fa2:	c3                   	ret
    1fa3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    1faa:	00 00 00 
    1fad:	0f 1f 00             	nopl   (%rax)

0000000000001fb0 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPK3AsmPS2_EET0_T_S7_S6_>:
    1fb0:	55                   	push   %rbp
    1fb1:	48 89 e5             	mov    %rsp,%rbp
    1fb4:	48 83 ec 20          	sub    $0x20,%rsp
    1fb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1fbc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    1fc0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    1fc4:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
    1fc8:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    1fcc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    1fd0:	e8 0b 00 00 00       	call   1fe0 <_ZSt16__do_uninit_copyIPK3AsmPS0_ET0_T_S5_S4_>
    1fd5:	48 83 c4 20          	add    $0x20,%rsp
    1fd9:	5d                   	pop    %rbp
    1fda:	c3                   	ret
    1fdb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001fe0 <_ZSt16__do_uninit_copyIPK3AsmPS0_ET0_T_S5_S4_>:
    1fe0:	55                   	push   %rbp
    1fe1:	48 89 e5             	mov    %rsp,%rbp
    1fe4:	48 83 ec 30          	sub    $0x30,%rsp
    1fe8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1fec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    1ff0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    1ff4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1ff8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1ffc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2000:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    2004:	0f 84 65 00 00 00    	je     206f <_ZSt16__do_uninit_copyIPK3AsmPS0_ET0_T_S5_S4_+0x8f>
    200a:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    200e:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    2012:	e8 99 00 00 00       	call   20b0 <_ZSt10_ConstructI3AsmJRKS0_EEvPT_DpOT0_>
    2017:	e9 00 00 00 00       	jmp    201c <_ZSt16__do_uninit_copyIPK3AsmPS0_ET0_T_S5_S4_+0x3c>
    201c:	e9 00 00 00 00       	jmp    2021 <_ZSt16__do_uninit_copyIPK3AsmPS0_ET0_T_S5_S4_+0x41>
    2021:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2025:	48 83 c0 18          	add    $0x18,%rax
    2029:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    202d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2031:	48 83 c0 18          	add    $0x18,%rax
    2035:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    2039:	e9 be ff ff ff       	jmp    1ffc <_ZSt16__do_uninit_copyIPK3AsmPS0_ET0_T_S5_S4_+0x1c>
    203e:	48 89 c1             	mov    %rax,%rcx
    2041:	89 d0                	mov    %edx,%eax
    2043:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
    2047:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    204a:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
    204e:	e8 0d f0 ff ff       	call   1060 <__cxa_begin_catch@plt>
    2053:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
    2057:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    205b:	e8 80 00 00 00       	call   20e0 <_ZSt8_DestroyIP3AsmEvT_S2_>
    2060:	e9 00 00 00 00       	jmp    2065 <_ZSt16__do_uninit_copyIPK3AsmPS0_ET0_T_S5_S4_+0x85>
    2065:	e8 76 f0 ff ff       	call   10e0 <__cxa_rethrow@plt>
    206a:	e9 36 00 00 00       	jmp    20a5 <_ZSt16__do_uninit_copyIPK3AsmPS0_ET0_T_S5_S4_+0xc5>
    206f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2073:	48 83 c4 30          	add    $0x30,%rsp
    2077:	5d                   	pop    %rbp
    2078:	c3                   	ret
    2079:	48 89 c1             	mov    %rax,%rcx
    207c:	89 d0                	mov    %edx,%eax
    207e:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
    2082:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    2085:	e8 76 f0 ff ff       	call   1100 <__cxa_end_catch@plt>
    208a:	e9 00 00 00 00       	jmp    208f <_ZSt16__do_uninit_copyIPK3AsmPS0_ET0_T_S5_S4_+0xaf>
    208f:	e9 00 00 00 00       	jmp    2094 <_ZSt16__do_uninit_copyIPK3AsmPS0_ET0_T_S5_S4_+0xb4>
    2094:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
    2098:	e8 73 f0 ff ff       	call   1110 <_Unwind_Resume@plt>
    209d:	48 89 c7             	mov    %rax,%rdi
    20a0:	e8 bb fe ff ff       	call   1f60 <__clang_call_terminate>
    20a5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    20ac:	00 00 00 
    20af:	90                   	nop

00000000000020b0 <_ZSt10_ConstructI3AsmJRKS0_EEvPT_DpOT0_>:
    20b0:	55                   	push   %rbp
    20b1:	48 89 e5             	mov    %rsp,%rbp
    20b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    20b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    20bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    20c0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    20c4:	48 8b 11             	mov    (%rcx),%rdx
    20c7:	48 89 10             	mov    %rdx,(%rax)
    20ca:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    20ce:	48 89 50 08          	mov    %rdx,0x8(%rax)
    20d2:	48 8b 49 10          	mov    0x10(%rcx),%rcx
    20d6:	48 89 48 10          	mov    %rcx,0x10(%rax)
    20da:	5d                   	pop    %rbp
    20db:	c3                   	ret
    20dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000020e0 <_ZSt8_DestroyIP3AsmEvT_S2_>:
    20e0:	55                   	push   %rbp
    20e1:	48 89 e5             	mov    %rsp,%rbp
    20e4:	48 83 ec 10          	sub    $0x10,%rsp
    20e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    20ec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    20f0:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
    20f4:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    20f8:	e8 13 00 00 00       	call   2110 <_ZNSt12_Destroy_auxILb1EE9__destroyIP3AsmEEvT_S4_>
    20fd:	48 83 c4 10          	add    $0x10,%rsp
    2101:	5d                   	pop    %rbp
    2102:	c3                   	ret
    2103:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    210a:	00 00 00 
    210d:	0f 1f 00             	nopl   (%rax)

0000000000002110 <_ZNSt12_Destroy_auxILb1EE9__destroyIP3AsmEEvT_S4_>:
    2110:	55                   	push   %rbp
    2111:	48 89 e5             	mov    %rsp,%rbp
    2114:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2118:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    211c:	5d                   	pop    %rbp
    211d:	c3                   	ret
    211e:	66 90                	xchg   %ax,%ax

0000000000002120 <_ZNKSt16initializer_listI3AsmE4sizeEv>:
    2120:	55                   	push   %rbp
    2121:	48 89 e5             	mov    %rsp,%rbp
    2124:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2128:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    212c:	48 8b 40 08          	mov    0x8(%rax),%rax
    2130:	5d                   	pop    %rbp
    2131:	c3                   	ret
    2132:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2139:	00 00 00 
    213c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000002140 <_ZNSt12_Vector_baseI3AsmSaIS0_EE13_M_deallocateEPS0_m>:
    2140:	55                   	push   %rbp
    2141:	48 89 e5             	mov    %rsp,%rbp
    2144:	48 83 ec 50          	sub    $0x50,%rsp
    2148:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    214c:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    2150:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    2154:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2158:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    215c:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    2161:	0f 84 41 00 00 00    	je     21a8 <_ZNSt12_Vector_baseI3AsmSaIS0_EE13_M_deallocateEPS0_m+0x68>
    2167:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    216b:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    216f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    2173:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
    2177:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
    217b:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    217f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    2183:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    2187:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    218b:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
    218f:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
    2193:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2197:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
    219b:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    219f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    21a3:	e8 28 00 00 00       	call   21d0 <_ZNSt15__new_allocatorI3AsmE10deallocateEPS0_m>
    21a8:	48 83 c4 50          	add    $0x50,%rsp
    21ac:	5d                   	pop    %rbp
    21ad:	c3                   	ret
    21ae:	66 90                	xchg   %ax,%ax

00000000000021b0 <_ZNSt12_Vector_baseI3AsmSaIS0_EE12_Vector_implD2Ev>:
    21b0:	55                   	push   %rbp
    21b1:	48 89 e5             	mov    %rsp,%rbp
    21b4:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
    21b8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    21bc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    21c0:	5d                   	pop    %rbp
    21c1:	c3                   	ret
    21c2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21c9:	00 00 00 
    21cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000021d0 <_ZNSt15__new_allocatorI3AsmE10deallocateEPS0_m>:
    21d0:	55                   	push   %rbp
    21d1:	48 89 e5             	mov    %rsp,%rbp
    21d4:	48 83 ec 20          	sub    $0x20,%rsp
    21d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    21dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    21e0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    21e4:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
    21e8:	e8 c3 ee ff ff       	call   10b0 <_ZdlPv@plt>
    21ed:	48 83 c4 20          	add    $0x20,%rsp
    21f1:	5d                   	pop    %rbp
    21f2:	c3                   	ret
    21f3:	90                   	nop

セクション .fini の逆アセンブル:

00000000000021f4 <_fini>:
    21f4:	f3 0f 1e fa          	endbr64
    21f8:	48 83 ec 08          	sub    $0x8,%rsp
    21fc:	48 83 c4 08          	add    $0x8,%rsp
    2200:	c3                   	ret

セクション .rodata の逆アセンブル:

0000000000003000 <_IO_stdin_used>:
    3000:	01 00                	add    %eax,(%rax)
    3002:	02 00                	add    (%rax),%al
    3004:	9e                   	sahf
    3005:	e2 ff                	loop   3006 <_IO_stdin_used+0x6>
    3007:	ff                   	(bad)
    3008:	ea                   	(bad)
    3009:	e2 ff                	loop   300a <_IO_stdin_used+0xa>
    300b:	ff 07                	incl   (%rdi)
    300d:	e4 ff                	in     $0xff,%al
    300f:	ff 07                	incl   (%rdi)
    3011:	e4 ff                	in     $0xff,%al
    3013:	ff 07                	incl   (%rdi)
    3015:	e4 ff                	in     $0xff,%al
    3017:	ff 07                	incl   (%rdi)
    3019:	e4 ff                	in     $0xff,%al
    301b:	ff 07                	incl   (%rdi)
    301d:	e4 ff                	in     $0xff,%al
    301f:	ff 46 e3             	incl   -0x1d(%rsi)
    3022:	ff                   	(bad)
    3023:	ff aa e3 ff ff 72    	ljmp   *0x72ffffe3(%rdx)
    3029:	25 64 25 73 20       	and    $0x20732564,%eax
    302e:	20 30                	and    %dh,(%rax)
    3030:	78 25                	js     3057 <_IO_stdin_used+0x57>
    3032:	7a 78                	jp     30ac <__GNU_EH_FRAME_HDR+0x34>
    3034:	0a 00                	or     (%rax),%al
    3036:	20 00                	and    %al,(%rax)
    3038:	76 61                	jbe    309b <__GNU_EH_FRAME_HDR+0x23>
    303a:	6c                   	insb   (%dx),%es:(%rdi)
    303b:	20 3d 20 30 78 25    	and    %bh,0x25783020(%rip)        # 25786061 <_end+0x25780fc9>
    3041:	7a 78                	jp     30bb <__GNU_EH_FRAME_HDR+0x43>
    3043:	0a 00                	or     (%rax),%al
    3045:	63 61 6e             	movsxd 0x6e(%rcx),%esp
    3048:	6e                   	outsb  %ds:(%rsi),(%dx)
    3049:	6f                   	outsl  %ds:(%rsi),(%dx)
    304a:	74 20                	je     306c <_IO_stdin_used+0x6c>
    304c:	63 72 65             	movsxd 0x65(%rdx),%esi
    304f:	61                   	(bad)
    3050:	74 65                	je     30b7 <__GNU_EH_FRAME_HDR+0x3f>
    3052:	20 73 74             	and    %dh,0x74(%rbx)
    3055:	64 3a 3a             	cmp    %fs:(%rdx),%bh
    3058:	76 65                	jbe    30bf <__GNU_EH_FRAME_HDR+0x47>
    305a:	63 74 6f 72          	movsxd 0x72(%rdi,%rbp,2),%esi
    305e:	20 6c 61 72          	and    %ch,0x72(%rcx,%riz,2)
    3062:	67 65 72 20          	addr32 gs jb 3086 <__GNU_EH_FRAME_HDR+0xe>
    3066:	74 68                	je     30d0 <__GNU_EH_FRAME_HDR+0x58>
    3068:	61                   	(bad)
    3069:	6e                   	outsb  %ds:(%rsi),(%dx)
    306a:	20 6d 61             	and    %ch,0x61(%rbp)
    306d:	78 5f                	js     30ce <__GNU_EH_FRAME_HDR+0x56>
    306f:	73 69                	jae    30da <__GNU_EH_FRAME_HDR+0x62>
    3071:	7a 65                	jp     30d8 <__GNU_EH_FRAME_HDR+0x60>
    3073:	28 29                	sub    %ch,(%rcx)
	...

セクション .eh_frame_hdr の逆アセンブル:

0000000000003078 <__GNU_EH_FRAME_HDR>:
    3078:	01 1b                	add    %ebx,(%rbx)
    307a:	03 3b                	add    (%rbx),%edi
    307c:	2c 01                	sub    $0x1,%al
    307e:	00 00                	add    %al,(%rax)
    3080:	24 00                	and    $0x0,%al
    3082:	00 00                	add    %al,(%rax)
    3084:	a8 df                	test   $0xdf,%al
    3086:	ff                   	(bad)
    3087:	ff 60 01             	jmp    *0x1(%rax)
    308a:	00 00                	add    %al,(%rax)
    308c:	a8 e0                	test   $0xe0,%al
    308e:	ff                   	(bad)
    308f:	ff 48 01             	decl   0x1(%rax)
    3092:	00 00                	add    %al,(%rax)
    3094:	a8 e1                	test   $0xe1,%al
    3096:	ff                   	(bad)
    3097:	ff 88 01 00 00 b8    	decl   -0x47ffffff(%rax)
    309d:	e3 ff                	jrcxz  309e <__GNU_EH_FRAME_HDR+0x26>
    309f:	ff a8 01 00 00 e8    	ljmp   *-0x17ffffff(%rax)
    30a5:	e3 ff                	jrcxz  30a6 <__GNU_EH_FRAME_HDR+0x2e>
    30a7:	ff c8                	dec    %eax
    30a9:	01 00                	add    %eax,(%rax)
    30ab:	00 08                	add    %cl,(%rax)
    30ad:	e4 ff                	in     $0xff,%al
    30af:	ff 30                	push   (%rax)
    30b1:	05 00 00 78 e7       	add    $0xe7780000,%eax
    30b6:	ff                   	(bad)
    30b7:	ff                   	(bad)
    30b8:	e8 01 00 00 d8       	call   ffffffffd80030be <_end+0xffffffffd7ffe026>
    30bd:	e7 ff                	out    %eax,$0xff
    30bf:	ff 08                	decl   (%rax)
    30c1:	02 00                	add    (%rax),%al
    30c3:	00 28                	add    %ch,(%rax)
    30c5:	e8 ff ff 58 05       	call   55930c9 <_end+0x558e031>
    30ca:	00 00                	add    %al,(%rax)
    30cc:	f8                   	clc
    30cd:	e8 ff ff 28 02       	call   22930d1 <_end+0x228e039>
    30d2:	00 00                	add    %al,(%rax)
    30d4:	28 e9                	sub    %ch,%cl
    30d6:	ff                   	(bad)
    30d7:	ff 48 02             	decl   0x2(%rax)
    30da:	00 00                	add    %al,(%rax)
    30dc:	38 e9                	cmp    %ch,%cl
    30de:	ff                   	(bad)
    30df:	ff 80 05 00 00 a8    	incl   -0x57fffffb(%rax)
    30e5:	e9 ff ff 68 02       	jmp    26930e9 <_end+0x268e051>
    30ea:	00 00                	add    %al,(%rax)
    30ec:	d8 e9                	fsubr  %st(1),%st
    30ee:	ff                   	(bad)
    30ef:	ff 88 02 00 00 f8    	decl   -0x7fffffe(%rax)
    30f5:	ea                   	(bad)
    30f6:	ff                   	(bad)
    30f7:	ff ac 02 00 00 18 eb 	ljmp   *-0x14e80000(%rdx,%rax,1)
    30fe:	ff                   	(bad)
    30ff:	ff cc                	dec    %esp
    3101:	02 00                	add    (%rax),%al
    3103:	00 58 eb             	add    %bl,-0x15(%rax)
    3106:	ff                   	(bad)
    3107:	ff a8 05 00 00 b8    	ljmp   *-0x47fffffb(%rax)
    310d:	eb ff                	jmp    310e <__GNU_EH_FRAME_HDR+0x96>
    310f:	ff                   	(bad)
    3110:	ec                   	in     (%dx),%al
    3111:	02 00                	add    (%rax),%al
    3113:	00 f8                	add    %bh,%al
    3115:	eb ff                	jmp    3116 <__GNU_EH_FRAME_HDR+0x9e>
    3117:	ff 0c 03             	decl   (%rbx,%rax,1)
    311a:	00 00                	add    %al,(%rax)
    311c:	28 ec                	sub    %ch,%ah
    311e:	ff                   	(bad)
    311f:	ff 2c 03             	ljmp   *(%rbx,%rax,1)
    3122:	00 00                	add    %al,(%rax)
    3124:	a8 ec                	test   $0xec,%al
    3126:	ff                   	(bad)
    3127:	ff 4c 03 00          	decl   0x0(%rbx,%rax,1)
    312b:	00 68 ed             	add    %ch,-0x13(%rax)
    312e:	ff                   	(bad)
    312f:	ff 70 03             	push   0x3(%rax)
    3132:	00 00                	add    %al,(%rax)
    3134:	78 ed                	js     3123 <__GNU_EH_FRAME_HDR+0xab>
    3136:	ff                   	(bad)
    3137:	ff 90 03 00 00 a8    	call   *-0x57fffffd(%rax)
    313d:	ed                   	in     (%dx),%eax
    313e:	ff                   	(bad)
    313f:	ff b0 03 00 00 18    	push   0x18000003(%rax)
    3145:	ee                   	out    %al,(%dx)
    3146:	ff                   	(bad)
    3147:	ff d0                	call   *%rax
    3149:	05 00 00 a8 ee       	add    $0xeea80000,%eax
    314e:	ff                   	(bad)
    314f:	ff d0                	call   *%rax
    3151:	03 00                	add    (%rax),%eax
    3153:	00 f8                	add    %bh,%al
    3155:	ee                   	out    %al,(%dx)
    3156:	ff                   	(bad)
    3157:	ff f0                	push   %rax
    3159:	03 00                	add    (%rax),%eax
    315b:	00 38                	add    %bh,(%rax)
    315d:	ef                   	out    %eax,(%dx)
    315e:	ff                   	(bad)
    315f:	ff 10                	call   *(%rax)
    3161:	04 00                	add    $0x0,%al
    3163:	00 68 ef             	add    %ch,-0x11(%rax)
    3166:	ff                   	(bad)
    3167:	ff                   	(bad)
    3168:	f8                   	clc
    3169:	05 00 00 38 f0       	add    $0xf0380000,%eax
    316e:	ff                   	(bad)
    316f:	ff 30                	push   (%rax)
    3171:	04 00                	add    $0x0,%al
    3173:	00 68 f0             	add    %ch,-0x10(%rax)
    3176:	ff                   	(bad)
    3177:	ff 50 04             	call   *0x4(%rax)
    317a:	00 00                	add    %al,(%rax)
    317c:	98                   	cwtl
    317d:	f0 ff                	lock (bad)
    317f:	ff 70 04             	push   0x4(%rax)
    3182:	00 00                	add    %al,(%rax)
    3184:	a8 f0                	test   $0xf0,%al
    3186:	ff                   	(bad)
    3187:	ff 90 04 00 00 c8    	call   *-0x37fffffc(%rax)
    318d:	f0 ff                	lock (bad)
    318f:	ff b0 04 00 00 38    	push   0x38000004(%rax)
    3195:	f1                   	int1
    3196:	ff                   	(bad)
    3197:	ff d0                	call   *%rax
    3199:	04 00                	add    $0x0,%al
    319b:	00 58 f1             	add    %bl,-0xf(%rax)
    319e:	ff                   	(bad)
    319f:	ff f0                	push   %rax
    31a1:	04 00                	add    $0x0,%al
	...

セクション .eh_frame の逆アセンブル:

00000000000031a8 <.eh_frame>:
    31a8:	14 00                	adc    $0x0,%al
    31aa:	00 00                	add    %al,(%rax)
    31ac:	00 00                	add    %al,(%rax)
    31ae:	00 00                	add    %al,(%rax)
    31b0:	01 7a 52             	add    %edi,0x52(%rdx)
    31b3:	00 01                	add    %al,(%rcx)
    31b5:	78 10                	js     31c7 <__GNU_EH_FRAME_HDR+0x14f>
    31b7:	01 1b                	add    %ebx,(%rbx)
    31b9:	0c 07                	or     $0x7,%al
    31bb:	08 90 01 00 00 14    	or     %dl,0x14000001(%rax)
    31c1:	00 00                	add    %al,(%rax)
    31c3:	00 1c 00             	add    %bl,(%rax,%rax,1)
    31c6:	00 00                	add    %al,(%rax)
    31c8:	58                   	pop    %rax
    31c9:	df ff                	(bad)
    31cb:	ff 26                	jmp    *(%rsi)
    31cd:	00 00                	add    %al,(%rax)
    31cf:	00 00                	add    %al,(%rax)
    31d1:	44 07                	rex.R (bad)
    31d3:	10 00                	adc    %al,(%rax)
    31d5:	00 00                	add    %al,(%rax)
    31d7:	00 24 00             	add    %ah,(%rax,%rax,1)
    31da:	00 00                	add    %al,(%rax)
    31dc:	34 00                	xor    $0x0,%al
    31de:	00 00                	add    %al,(%rax)
    31e0:	40 de ff             	rex fdivrp %st,%st(7)
    31e3:	ff 00                	incl   (%rax)
    31e5:	01 00                	add    %eax,(%rax)
    31e7:	00 00                	add    %al,(%rax)
    31e9:	0e                   	(bad)
    31ea:	10 46 0e             	adc    %al,0xe(%rsi)
    31ed:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    31f0:	0b 77 08             	or     0x8(%rdi),%esi
    31f3:	80 00 3f             	addb   $0x3f,(%rax)
    31f6:	1a 3b                	sbb    (%rbx),%bh
    31f8:	2a 33                	sub    (%rbx),%dh
    31fa:	24 22                	and    $0x22,%al
    31fc:	00 00                	add    %al,(%rax)
    31fe:	00 00                	add    %al,(%rax)
    3200:	1c 00                	sbb    $0x0,%al
    3202:	00 00                	add    %al,(%rax)
    3204:	5c                   	pop    %rsp
    3205:	00 00                	add    %al,(%rax)
    3207:	00 18                	add    %bl,(%rax)
    3209:	e0 ff                	loopne 320a <__GNU_EH_FRAME_HDR+0x192>
    320b:	ff 06                	incl   (%rsi)
    320d:	02 00                	add    (%rax),%al
    320f:	00 00                	add    %al,(%rax)
    3211:	41 0e                	rex.B (bad)
    3213:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    3219:	03 01                	add    (%rcx),%eax
    321b:	02 0c 07             	add    (%rdi,%rax,1),%cl
    321e:	08 00                	or     %al,(%rax)
    3220:	1c 00                	sbb    $0x0,%al
    3222:	00 00                	add    %al,(%rax)
    3224:	7c 00                	jl     3226 <__GNU_EH_FRAME_HDR+0x1ae>
    3226:	00 00                	add    %al,(%rax)
    3228:	08 e2                	or     %ah,%dl
    322a:	ff                   	(bad)
    322b:	ff 22                	jmp    *(%rdx)
    322d:	00 00                	add    %al,(%rax)
    322f:	00 00                	add    %al,(%rax)
    3231:	41 0e                	rex.B (bad)
    3233:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    3239:	5d                   	pop    %rbp
    323a:	0c 07                	or     $0x7,%al
    323c:	08 00                	or     %al,(%rax)
    323e:	00 00                	add    %al,(%rax)
    3240:	1c 00                	sbb    $0x0,%al
    3242:	00 00                	add    %al,(%rax)
    3244:	9c                   	pushf
    3245:	00 00                	add    %al,(%rax)
    3247:	00 18                	add    %bl,(%rax)
    3249:	e2 ff                	loop   324a <__GNU_EH_FRAME_HDR+0x1d2>
    324b:	ff 1d 00 00 00 00    	lcall  *0x0(%rip)        # 3251 <__GNU_EH_FRAME_HDR+0x1d9>
    3251:	41 0e                	rex.B (bad)
    3253:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    3259:	58                   	pop    %rax
    325a:	0c 07                	or     $0x7,%al
    325c:	08 00                	or     %al,(%rax)
    325e:	00 00                	add    %al,(%rax)
    3260:	1c 00                	sbb    $0x0,%al
    3262:	00 00                	add    %al,(%rax)
    3264:	bc 00 00 00 88       	mov    $0x88000000,%esp
    3269:	e5 ff                	in     $0xff,%eax
    326b:	ff 60 00             	jmp    *0x0(%rax)
    326e:	00 00                	add    %al,(%rax)
    3270:	00 41 0e             	add    %al,0xe(%rcx)
    3273:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    3279:	02 5b 0c             	add    0xc(%rbx),%bl
    327c:	07                   	(bad)
    327d:	08 00                	or     %al,(%rax)
    327f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    3282:	00 00                	add    %al,(%rax)
    3284:	dc 00                	faddl  (%rax)
    3286:	00 00                	add    %al,(%rax)
    3288:	c8 e5 ff ff          	enter  $0xffe5,$0xff
    328c:	44 00 00             	add    %r8b,(%rax)
    328f:	00 00                	add    %al,(%rax)
    3291:	41 0e                	rex.B (bad)
    3293:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    3299:	7f 0c                	jg     32a7 <__GNU_EH_FRAME_HDR+0x22f>
    329b:	07                   	(bad)
    329c:	08 00                	or     %al,(%rax)
    329e:	00 00                	add    %al,(%rax)
    32a0:	1c 00                	sbb    $0x0,%al
    32a2:	00 00                	add    %al,(%rax)
    32a4:	fc                   	cld
    32a5:	00 00                	add    %al,(%rax)
    32a7:	00 c8                	add    %cl,%al
    32a9:	e6 ff                	out    %al,$0xff
    32ab:	ff 22                	jmp    *(%rdx)
    32ad:	00 00                	add    %al,(%rax)
    32af:	00 00                	add    %al,(%rax)
    32b1:	41 0e                	rex.B (bad)
    32b3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    32b9:	5d                   	pop    %rbp
    32ba:	0c 07                	or     $0x7,%al
    32bc:	08 00                	or     %al,(%rax)
    32be:	00 00                	add    %al,(%rax)
    32c0:	1c 00                	sbb    $0x0,%al
    32c2:	00 00                	add    %al,(%rax)
    32c4:	1c 01                	sbb    $0x1,%al
    32c6:	00 00                	add    %al,(%rax)
    32c8:	d8 e6                	fsub   %st(6),%st
    32ca:	ff                   	(bad)
    32cb:	ff 0a                	decl   (%rdx)
    32cd:	00 00                	add    %al,(%rax)
    32cf:	00 00                	add    %al,(%rax)
    32d1:	41 0e                	rex.B (bad)
    32d3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    32d9:	45 0c 07             	rex.RB or $0x7,%al
    32dc:	08 00                	or     %al,(%rax)
    32de:	00 00                	add    %al,(%rax)
    32e0:	1c 00                	sbb    $0x0,%al
    32e2:	00 00                	add    %al,(%rax)
    32e4:	3c 01                	cmp    $0x1,%al
    32e6:	00 00                	add    %al,(%rax)
    32e8:	38 e7                	cmp    %ah,%bh
    32ea:	ff                   	(bad)
    32eb:	ff 23                	jmp    *(%rbx)
    32ed:	00 00                	add    %al,(%rax)
    32ef:	00 00                	add    %al,(%rax)
    32f1:	41 0e                	rex.B (bad)
    32f3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    32f9:	5e                   	pop    %rsi
    32fa:	0c 07                	or     $0x7,%al
    32fc:	08 00                	or     %al,(%rax)
    32fe:	00 00                	add    %al,(%rax)
    3300:	20 00                	and    %al,(%rax)
    3302:	00 00                	add    %al,(%rax)
    3304:	5c                   	pop    %rsp
    3305:	01 00                	add    %eax,(%rax)
    3307:	00 48 e7             	add    %cl,-0x19(%rax)
    330a:	ff                   	(bad)
    330b:	ff 13                	call   *(%rbx)
    330d:	01 00                	add    %eax,(%rax)
    330f:	00 00                	add    %al,(%rax)
    3311:	41 0e                	rex.B (bad)
    3313:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    3319:	03 09                	add    (%rcx),%ecx
    331b:	01 0c 07             	add    %ecx,(%rdi,%rax,1)
    331e:	08 41 0c             	or     %al,0xc(%rcx)
    3321:	06                   	(bad)
    3322:	10 00                	adc    %al,(%rax)
    3324:	1c 00                	sbb    $0x0,%al
    3326:	00 00                	add    %al,(%rax)
    3328:	80 01 00             	addb   $0x0,(%rcx)
    332b:	00 44 e8 ff          	add    %al,-0x1(%rax,%rbp,8)
    332f:	ff 11                	call   *(%rcx)
    3331:	00 00                	add    %al,(%rax)
    3333:	00 00                	add    %al,(%rax)
    3335:	41 0e                	rex.B (bad)
    3337:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    333d:	4c 0c 07             	rex.WR or $0x7,%al
    3340:	08 00                	or     %al,(%rax)
    3342:	00 00                	add    %al,(%rax)
    3344:	1c 00                	sbb    $0x0,%al
    3346:	00 00                	add    %al,(%rax)
    3348:	a0 01 00 00 44 e8 ff 	movabs 0x3affffe844000001,%al
    334f:	ff 3a 
    3351:	00 00                	add    %al,(%rax)
    3353:	00 00                	add    %al,(%rax)
    3355:	41 0e                	rex.B (bad)
    3357:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    335d:	75 0c                	jne    336b <__GNU_EH_FRAME_HDR+0x2f3>
    335f:	07                   	(bad)
    3360:	08 00                	or     %al,(%rax)
    3362:	00 00                	add    %al,(%rax)
    3364:	1c 00                	sbb    $0x0,%al
    3366:	00 00                	add    %al,(%rax)
    3368:	c0 01 00             	rolb   $0x0,(%rcx)
    336b:	00 c4                	add    %al,%ah
    336d:	e8 ff ff 3b 00       	call   3c3371 <_end+0x3be2d9>
    3372:	00 00                	add    %al,(%rax)
    3374:	00 41 0e             	add    %al,0xe(%rcx)
    3377:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    337d:	76 0c                	jbe    338b <__GNU_EH_FRAME_HDR+0x313>
    337f:	07                   	(bad)
    3380:	08 00                	or     %al,(%rax)
    3382:	00 00                	add    %al,(%rax)
    3384:	1c 00                	sbb    $0x0,%al
    3386:	00 00                	add    %al,(%rax)
    3388:	e0 01                	loopne 338b <__GNU_EH_FRAME_HDR+0x313>
    338a:	00 00                	add    %al,(%rax)
    338c:	e4 e8                	in     $0xe8,%al
    338e:	ff                   	(bad)
    338f:	ff 25 00 00 00 00    	jmp    *0x0(%rip)        # 3395 <__GNU_EH_FRAME_HDR+0x31d>
    3395:	41 0e                	rex.B (bad)
    3397:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    339d:	60                   	(bad)
    339e:	0c 07                	or     $0x7,%al
    33a0:	08 00                	or     %al,(%rax)
    33a2:	00 00                	add    %al,(%rax)
    33a4:	1c 00                	sbb    $0x0,%al
    33a6:	00 00                	add    %al,(%rax)
    33a8:	00 02                	add    %al,(%rdx)
    33aa:	00 00                	add    %al,(%rax)
    33ac:	f4                   	hlt
    33ad:	e8 ff ff 72 00       	call   7333b1 <_end+0x72e319>
    33b2:	00 00                	add    %al,(%rax)
    33b4:	00 41 0e             	add    %al,0xe(%rcx)
    33b7:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    33bd:	02 6d 0c             	add    0xc(%rbp),%ch
    33c0:	07                   	(bad)
    33c1:	08 00                	or     %al,(%rax)
    33c3:	00 20                	add    %ah,(%rax)
    33c5:	00 00                	add    %al,(%rax)
    33c7:	00 20                	add    %ah,(%rax)
    33c9:	02 00                	add    (%rax),%al
    33cb:	00 54 e9 ff          	add    %dl,-0x1(%rcx,%rbp,8)
    33cf:	ff b5 00 00 00 00    	push   0x0(%rbp)
    33d5:	41 0e                	rex.B (bad)
    33d7:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    33dd:	02 ab 0c 07 08 41    	add    0x4108070c(%rbx),%ch
    33e3:	0c 06                	or     $0x6,%al
    33e5:	10 00                	adc    %al,(%rax)
    33e7:	00 1c 00             	add    %bl,(%rax,%rax,1)
    33ea:	00 00                	add    %al,(%rax)
    33ec:	44 02 00             	add    (%rax),%r8b
    33ef:	00 f0                	add    %dh,%al
    33f1:	e9 ff ff 0e 00       	jmp    f33f5 <_end+0xee35d>
    33f6:	00 00                	add    %al,(%rax)
    33f8:	00 41 0e             	add    %al,0xe(%rcx)
    33fb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    3401:	49 0c 07             	rex.WB or $0x7,%al
    3404:	08 00                	or     %al,(%rax)
    3406:	00 00                	add    %al,(%rax)
    3408:	1c 00                	sbb    $0x0,%al
    340a:	00 00                	add    %al,(%rax)
    340c:	64 02 00             	add    %fs:(%rax),%al
    340f:	00 e0                	add    %ah,%al
    3411:	e9 ff ff 2f 00       	jmp    303415 <_end+0x2fe37d>
    3416:	00 00                	add    %al,(%rax)
    3418:	00 41 0e             	add    %al,0xe(%rcx)
    341b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    3421:	6a 0c                	push   $0xc
    3423:	07                   	(bad)
    3424:	08 00                	or     %al,(%rax)
    3426:	00 00                	add    %al,(%rax)
    3428:	1c 00                	sbb    $0x0,%al
    342a:	00 00                	add    %al,(%rax)
    342c:	84 02                	test   %al,(%rdx)
    342e:	00 00                	add    %al,(%rax)
    3430:	f0 e9 ff ff 61 00    	lock jmp 623435 <_end+0x61e39d>
    3436:	00 00                	add    %al,(%rax)
    3438:	00 41 0e             	add    %al,0xe(%rcx)
    343b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    3441:	02 5c 0c 07          	add    0x7(%rsp,%rcx,1),%bl
    3445:	08 00                	or     %al,(%rax)
    3447:	00 1c 00             	add    %bl,(%rax,%rax,1)
    344a:	00 00                	add    %al,(%rax)
    344c:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
    344d:	02 00                	add    (%rax),%al
    344f:	00 d0                	add    %dl,%al
    3451:	ea                   	(bad)
    3452:	ff                   	(bad)
    3453:	ff                   	(bad)
    3454:	3b 00                	cmp    (%rax),%eax
    3456:	00 00                	add    %al,(%rax)
    3458:	00 41 0e             	add    %al,0xe(%rcx)
    345b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    3461:	76 0c                	jbe    346f <__GNU_EH_FRAME_HDR+0x3f7>
    3463:	07                   	(bad)
    3464:	08 00                	or     %al,(%rax)
    3466:	00 00                	add    %al,(%rax)
    3468:	1c 00                	sbb    $0x0,%al
    346a:	00 00                	add    %al,(%rax)
    346c:	c4 02 00 00          	(bad)
    3470:	00 eb                	add    %ch,%bl
    3472:	ff                   	(bad)
    3473:	ff 33                	push   (%rbx)
    3475:	00 00                	add    %al,(%rax)
    3477:	00 00                	add    %al,(%rax)
    3479:	41 0e                	rex.B (bad)
    347b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    3481:	6e                   	outsb  %ds:(%rsi),(%dx)
    3482:	0c 07                	or     $0x7,%al
    3484:	08 00                	or     %al,(%rax)
    3486:	00 00                	add    %al,(%rax)
    3488:	1c 00                	sbb    $0x0,%al
    348a:	00 00                	add    %al,(%rax)
    348c:	e4 02                	in     $0x2,%al
    348e:	00 00                	add    %al,(%rax)
    3490:	20 eb                	and    %ch,%bl
    3492:	ff                   	(bad)
    3493:	ff 2b                	ljmp   *(%rbx)
    3495:	00 00                	add    %al,(%rax)
    3497:	00 00                	add    %al,(%rax)
    3499:	41 0e                	rex.B (bad)
    349b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    34a1:	66 0c 07             	data16 or $0x7,%al
    34a4:	08 00                	or     %al,(%rax)
    34a6:	00 00                	add    %al,(%rax)
    34a8:	1c 00                	sbb    $0x0,%al
    34aa:	00 00                	add    %al,(%rax)
    34ac:	04 03                	add    $0x3,%al
    34ae:	00 00                	add    %al,(%rax)
    34b0:	00 ec                	add    %ch,%ah
    34b2:	ff                   	(bad)
    34b3:	ff 2c 00             	ljmp   *(%rax,%rax,1)
    34b6:	00 00                	add    %al,(%rax)
    34b8:	00 41 0e             	add    %al,0xe(%rcx)
    34bb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    34c1:	67 0c 07             	addr32 or $0x7,%al
    34c4:	08 00                	or     %al,(%rax)
    34c6:	00 00                	add    %al,(%rax)
    34c8:	1c 00                	sbb    $0x0,%al
    34ca:	00 00                	add    %al,(%rax)
    34cc:	24 03                	and    $0x3,%al
    34ce:	00 00                	add    %al,(%rax)
    34d0:	10 ec                	adc    %ch,%ah
    34d2:	ff                   	(bad)
    34d3:	ff 23                	jmp    *(%rbx)
    34d5:	00 00                	add    %al,(%rax)
    34d7:	00 00                	add    %al,(%rax)
    34d9:	41 0e                	rex.B (bad)
    34db:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    34e1:	5e                   	pop    %rsi
    34e2:	0c 07                	or     $0x7,%al
    34e4:	08 00                	or     %al,(%rax)
    34e6:	00 00                	add    %al,(%rax)
    34e8:	1c 00                	sbb    $0x0,%al
    34ea:	00 00                	add    %al,(%rax)
    34ec:	44 03 00             	add    (%rax),%r8d
    34ef:	00 20                	add    %ah,(%rax)
    34f1:	ec                   	in     (%dx),%al
    34f2:	ff                   	(bad)
    34f3:	ff 0e                	decl   (%rsi)
    34f5:	00 00                	add    %al,(%rax)
    34f7:	00 00                	add    %al,(%rax)
    34f9:	41 0e                	rex.B (bad)
    34fb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    3501:	49 0c 07             	rex.WB or $0x7,%al
    3504:	08 00                	or     %al,(%rax)
    3506:	00 00                	add    %al,(%rax)
    3508:	1c 00                	sbb    $0x0,%al
    350a:	00 00                	add    %al,(%rax)
    350c:	64 03 00             	add    %fs:(%rax),%eax
    350f:	00 10                	add    %dl,(%rax)
    3511:	ec                   	in     (%dx),%al
    3512:	ff                   	(bad)
    3513:	ff 12                	call   *(%rdx)
    3515:	00 00                	add    %al,(%rax)
    3517:	00 00                	add    %al,(%rax)
    3519:	41 0e                	rex.B (bad)
    351b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    3521:	4d 0c 07             	rex.WRB or $0x7,%al
    3524:	08 00                	or     %al,(%rax)
    3526:	00 00                	add    %al,(%rax)
    3528:	1c 00                	sbb    $0x0,%al
    352a:	00 00                	add    %al,(%rax)
    352c:	84 03                	test   %al,(%rbx)
    352e:	00 00                	add    %al,(%rax)
    3530:	10 ec                	adc    %ch,%ah
    3532:	ff                   	(bad)
    3533:	ff 6e 00             	ljmp   *0x0(%rsi)
    3536:	00 00                	add    %al,(%rax)
    3538:	00 41 0e             	add    %al,0xe(%rcx)
    353b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    3541:	02 69 0c             	add    0xc(%rcx),%ch
    3544:	07                   	(bad)
    3545:	08 00                	or     %al,(%rax)
    3547:	00 1c 00             	add    %bl,(%rax,%rax,1)
    354a:	00 00                	add    %al,(%rax)
    354c:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
    354d:	03 00                	add    (%rax),%eax
    354f:	00 60 ec             	add    %ah,-0x14(%rax)
    3552:	ff                   	(bad)
    3553:	ff 12                	call   *(%rdx)
    3555:	00 00                	add    %al,(%rax)
    3557:	00 00                	add    %al,(%rax)
    3559:	41 0e                	rex.B (bad)
    355b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    3561:	4d 0c 07             	rex.WRB or $0x7,%al
    3564:	08 00                	or     %al,(%rax)
    3566:	00 00                	add    %al,(%rax)
    3568:	1c 00                	sbb    $0x0,%al
    356a:	00 00                	add    %al,(%rax)
    356c:	c4 03 00 00          	(bad)
    3570:	60                   	(bad)
    3571:	ec                   	in     (%dx),%al
    3572:	ff                   	(bad)
    3573:	ff 23                	jmp    *(%rbx)
    3575:	00 00                	add    %al,(%rax)
    3577:	00 00                	add    %al,(%rax)
    3579:	41 0e                	rex.B (bad)
    357b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    3581:	5e                   	pop    %rsi
    3582:	0c 07                	or     $0x7,%al
    3584:	08 00                	or     %al,(%rax)
    3586:	00 00                	add    %al,(%rax)
    3588:	1c 00                	sbb    $0x0,%al
    358a:	00 00                	add    %al,(%rax)
    358c:	00 00                	add    %al,(%rax)
    358e:	00 00                	add    %al,(%rax)
    3590:	01 7a 50             	add    %edi,0x50(%rdx)
    3593:	4c 52                	rex.WR push %rdx
    3595:	00 01                	add    %al,(%rcx)
    3597:	78 10                	js     35a9 <__GNU_EH_FRAME_HDR+0x531>
    3599:	07                   	(bad)
    359a:	9b                   	fwait
    359b:	ed                   	in     (%dx),%eax
    359c:	1a 00                	sbb    (%rax),%al
    359e:	00 1b                	add    %bl,(%rbx)
    35a0:	1b 0c 07             	sbb    (%rdi,%rax,1),%ecx
    35a3:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
    35a9:	00 00                	add    %al,(%rax)
    35ab:	00 24 00             	add    %ah,(%rax,%rax,1)
    35ae:	00 00                	add    %al,(%rax)
    35b0:	d0 de                	rcr    %dh
    35b2:	ff                   	(bad)
    35b3:	ff 6f 03             	ljmp   *0x3(%rdi)
    35b6:	00 00                	add    %al,(%rax)
    35b8:	04 e3                	add    $0xe3,%al
    35ba:	00 00                	add    %al,(%rax)
    35bc:	00 41 0e             	add    %al,0xe(%rcx)
    35bf:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    35c5:	03 29                	add    (%rcx),%ebp
    35c7:	03 0c 07             	add    (%rdi,%rax,1),%ecx
    35ca:	08 41 0c             	or     %al,0xc(%rcx)
    35cd:	06                   	(bad)
    35ce:	10 00                	adc    %al,(%rax)
    35d0:	24 00                	and    $0x0,%al
    35d2:	00 00                	add    %al,(%rax)
    35d4:	4c 00 00             	rex.WR add %r8b,(%rax)
    35d7:	00 c8                	add    %cl,%al
    35d9:	e2 ff                	loop   35da <__GNU_EH_FRAME_HDR+0x562>
    35db:	ff c2                	inc    %edx
    35dd:	00 00                	add    %al,(%rax)
    35df:	00 04 df             	add    %al,(%rdi,%rbx,8)
    35e2:	00 00                	add    %al,(%rax)
    35e4:	00 41 0e             	add    %al,0xe(%rcx)
    35e7:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    35ed:	02 7c 0c 07          	add    0x7(%rsp,%rcx,1),%bh
    35f1:	08 41 0c             	or     %al,0xc(%rcx)
    35f4:	06                   	(bad)
    35f5:	10 00                	adc    %al,(%rax)
    35f7:	00 24 00             	add    %ah,(%rax,%rax,1)
    35fa:	00 00                	add    %al,(%rax)
    35fc:	74 00                	je     35fe <__GNU_EH_FRAME_HDR+0x586>
    35fe:	00 00                	add    %al,(%rax)
    3600:	b0 e3                	mov    $0xe3,%al
    3602:	ff                   	(bad)
    3603:	ff 6a 00             	ljmp   *0x0(%rdx)
    3606:	00 00                	add    %al,(%rax)
    3608:	04 c7                	add    $0xc7,%al
    360a:	00 00                	add    %al,(%rax)
    360c:	00 41 0e             	add    %al,0xe(%rcx)
    360f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    3615:	02 5d 0c             	add    0xc(%rbp),%bl
    3618:	07                   	(bad)
    3619:	08 41 0c             	or     %al,0xc(%rcx)
    361c:	06                   	(bad)
    361d:	10 00                	adc    %al,(%rax)
    361f:	00 24 00             	add    %ah,(%rax,%rax,1)
    3622:	00 00                	add    %al,(%rax)
    3624:	9c                   	pushf
    3625:	00 00                	add    %al,(%rax)
    3627:	00 a8 e5 ff ff 51    	add    %ch,0x51ffffe5(%rax)
    362d:	00 00                	add    %al,(%rax)
    362f:	00 04 af             	add    %al,(%rdi,%rbp,4)
    3632:	00 00                	add    %al,(%rax)
    3634:	00 41 0e             	add    %al,0xe(%rcx)
    3637:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    363d:	02 44 0c 07          	add    0x7(%rsp,%rcx,1),%al
    3641:	08 41 0c             	or     %al,0xc(%rcx)
    3644:	06                   	(bad)
    3645:	10 00                	adc    %al,(%rax)
    3647:	00 24 00             	add    %ah,(%rax,%rax,1)
    364a:	00 00                	add    %al,(%rax)
    364c:	c4                   	(bad)
    364d:	00 00                	add    %al,(%rax)
    364f:	00 40 e8             	add    %al,-0x18(%rax)
    3652:	ff                   	(bad)
    3653:	ff 8b 00 00 00 04    	decl   0x4000000(%rbx)
    3659:	97                   	xchg   %eax,%edi
    365a:	00 00                	add    %al,(%rax)
    365c:	00 41 0e             	add    %al,0xe(%rcx)
    365f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    3665:	02 79 0c             	add    0xc(%rcx),%bh
    3668:	07                   	(bad)
    3669:	08 41 0c             	or     %al,0xc(%rcx)
    366c:	06                   	(bad)
    366d:	10 00                	adc    %al,(%rax)
    366f:	00 24 00             	add    %ah,(%rax,%rax,1)
    3672:	00 00                	add    %al,(%rax)
    3674:	ec                   	in     (%dx),%al
    3675:	00 00                	add    %al,(%rax)
    3677:	00 68 e9             	add    %ch,-0x17(%rax)
    367a:	ff                   	(bad)
    367b:	ff c5                	inc    %ebp
    367d:	00 00                	add    %al,(%rax)
    367f:	00 04 83             	add    %al,(%rbx,%rax,4)
    3682:	00 00                	add    %al,(%rax)
    3684:	00 41 0e             	add    %al,0xe(%rcx)
    3687:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    368d:	02 94 0c 07 08 41 0c 	add    0xc410807(%rsp,%rcx,1),%dl
    3694:	06                   	(bad)
    3695:	10 00                	adc    %al,(%rax)
    3697:	00 00                	add    %al,(%rax)
    3699:	00 00                	add    %al,(%rax)
	...

セクション .gcc_except_table の逆アセンブル:

000000000000369c <GCC_except_table0>:
    369c:	ff                   	(bad)
    369d:	ff 01                	incl   (%rcx)
    369f:	1e                   	(bad)
    36a0:	00 d7                	add    %dl,%bh
    36a2:	02 00                	add    (%rax),%al
    36a4:	00 d7                	add    %dl,%bh
    36a6:	02 0c db             	add    (%rbx,%rbx,8),%cl
    36a9:	04 00                	add    $0x0,%al
    36ab:	f6 02 0c             	testb  $0xc,(%rdx)
    36ae:	80 05 00 87 03 d9 02 	addb   $0x2,-0x26fc7900(%rip)        # ffffffffd903bdb5 <_end+0xffffffffd9036d1d>
    36b5:	97                   	xchg   %eax,%edi
    36b6:	05 00 e0 05 8f       	add    $0x8f05e000,%eax
    36bb:	01 00                	add    %eax,(%rax)
    36bd:	00 00                	add    %al,(%rax)
	...

00000000000036c0 <GCC_except_table3>:
    36c0:	ff                   	(bad)
    36c1:	ff 01                	incl   (%rcx)
    36c3:	09 5b 05             	or     %ebx,0x5(%rbx)
    36c6:	81 01 00 60 62 00    	addl   $0x626000,(%rcx)
    36cc:	00 00                	add    %al,(%rax)
	...

00000000000036d0 <GCC_except_table6>:
    36d0:	ff 9b 0d 01 04 44    	lcall  *0x4404010d(%rbx)
    36d6:	05 62 01 01 00       	add    $0x10162,%eax
    36db:	00 00                	add    %al,(%rax)
    36dd:	00 00                	add    %al,(%rax)
	...

00000000000036e0 <GCC_except_table11>:
    36e0:	ff 9b 0d 01 04 30    	lcall  *0x3004010d(%rbx)
    36e6:	05 49 01 01 00       	add    $0x10149,%eax
    36eb:	00 00                	add    %al,(%rax)
    36ed:	00 00                	add    %al,(%rax)
	...

00000000000036f0 <GCC_except_table19>:
    36f0:	ff 9b 11 01 08 3d    	lcall  *0x3d080111(%rbx)
    36f6:	0d 7e 01 4a 41       	or     $0x414a017e,%eax
    36fb:	00 00                	add    %al,(%rax)
    36fd:	01 00                	add    %eax,(%rax)
    36ff:	00 00                	add    %al,(%rax)
    3701:	00 00                	add    %al,(%rax)
	...

0000000000003704 <GCC_except_table24>:
    3704:	ff 9b 21 01 18 32    	lcall  *0x32180121(%rbx)
    370a:	05 5e 01 37 44       	add    $0x4437015e,%eax
    370f:	00 00                	add    %al,(%rax)
    3711:	7b 0f                	jnp    3722 <GCC_except_table24+0x1e>
    3713:	99                   	cltd
    3714:	01 00                	add    %eax,(%rax)
    3716:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    3717:	01 05 bd 01 01 aa    	add    %eax,-0x55fefe43(%rip)        # ffffffffaa0138da <_end+0xffffffffaa00e842>
    371d:	01 1b                	add    %ebx,(%rbx)
    371f:	00 00                	add    %al,(%rax)
    3721:	01 00                	add    %eax,(%rax)
    3723:	00 00                	add    %al,(%rax)
    3725:	00 00                	add    %al,(%rax)
	...

セクション .init_array の逆アセンブル:

0000000000004da0 <.init_array>:
    4da0:	10 12                	adc    %dl,(%rdx)
    4da2:	00 00                	add    %al,(%rax)
    4da4:	00 00                	add    %al,(%rax)
	...

セクション .fini_array の逆アセンブル:

0000000000004da8 <.fini_array>:
    4da8:	c0 11 00             	rclb   $0x0,(%rcx)
    4dab:	00 00                	add    %al,(%rax)
    4dad:	00 00                	add    %al,(%rax)
	...

セクション .dynamic の逆アセンブル:

0000000000004db0 <_DYNAMIC>:
    4db0:	01 00                	add    %eax,(%rax)
    4db2:	00 00                	add    %al,(%rax)
    4db4:	00 00                	add    %al,(%rax)
    4db6:	00 00                	add    %al,(%rax)
    4db8:	7b 01                	jnp    4dbb <_DYNAMIC+0xb>
    4dba:	00 00                	add    %al,(%rax)
    4dbc:	00 00                	add    %al,(%rax)
    4dbe:	00 00                	add    %al,(%rax)
    4dc0:	01 00                	add    %eax,(%rax)
    4dc2:	00 00                	add    %al,(%rax)
    4dc4:	00 00                	add    %al,(%rax)
    4dc6:	00 00                	add    %al,(%rax)
    4dc8:	8a 01                	mov    (%rcx),%al
    4dca:	00 00                	add    %al,(%rax)
    4dcc:	00 00                	add    %al,(%rax)
    4dce:	00 00                	add    %al,(%rax)
    4dd0:	01 00                	add    %eax,(%rax)
    4dd2:	00 00                	add    %al,(%rax)
    4dd4:	00 00                	add    %al,(%rax)
    4dd6:	00 00                	add    %al,(%rax)
    4dd8:	94                   	xchg   %eax,%esp
    4dd9:	01 00                	add    %eax,(%rax)
    4ddb:	00 00                	add    %al,(%rax)
    4ddd:	00 00                	add    %al,(%rax)
    4ddf:	00 01                	add    %al,(%rcx)
    4de1:	00 00                	add    %al,(%rax)
    4de3:	00 00                	add    %al,(%rax)
    4de5:	00 00                	add    %al,(%rax)
    4de7:	00 a2 01 00 00 00    	add    %ah,0x1(%rdx)
    4ded:	00 00                	add    %al,(%rax)
    4def:	00 0c 00             	add    %cl,(%rax,%rax,1)
    4df2:	00 00                	add    %al,(%rax)
    4df4:	00 00                	add    %al,(%rax)
    4df6:	00 00                	add    %al,(%rax)
    4df8:	00 10                	add    %dl,(%rax)
    4dfa:	00 00                	add    %al,(%rax)
    4dfc:	00 00                	add    %al,(%rax)
    4dfe:	00 00                	add    %al,(%rax)
    4e00:	0d 00 00 00 00       	or     $0x0,%eax
    4e05:	00 00                	add    %al,(%rax)
    4e07:	00 f4                	add    %dh,%ah
    4e09:	21 00                	and    %eax,(%rax)
    4e0b:	00 00                	add    %al,(%rax)
    4e0d:	00 00                	add    %al,(%rax)
    4e0f:	00 19                	add    %bl,(%rcx)
    4e11:	00 00                	add    %al,(%rax)
    4e13:	00 00                	add    %al,(%rax)
    4e15:	00 00                	add    %al,(%rax)
    4e17:	00 a0 4d 00 00 00    	add    %ah,0x4d(%rax)
    4e1d:	00 00                	add    %al,(%rax)
    4e1f:	00 1b                	add    %bl,(%rbx)
    4e21:	00 00                	add    %al,(%rax)
    4e23:	00 00                	add    %al,(%rax)
    4e25:	00 00                	add    %al,(%rax)
    4e27:	00 08                	add    %cl,(%rax)
    4e29:	00 00                	add    %al,(%rax)
    4e2b:	00 00                	add    %al,(%rax)
    4e2d:	00 00                	add    %al,(%rax)
    4e2f:	00 1a                	add    %bl,(%rdx)
    4e31:	00 00                	add    %al,(%rax)
    4e33:	00 00                	add    %al,(%rax)
    4e35:	00 00                	add    %al,(%rax)
    4e37:	00 a8 4d 00 00 00    	add    %ch,0x4d(%rax)
    4e3d:	00 00                	add    %al,(%rax)
    4e3f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    4e42:	00 00                	add    %al,(%rax)
    4e44:	00 00                	add    %al,(%rax)
    4e46:	00 00                	add    %al,(%rax)
    4e48:	08 00                	or     %al,(%rax)
    4e4a:	00 00                	add    %al,(%rax)
    4e4c:	00 00                	add    %al,(%rax)
    4e4e:	00 00                	add    %al,(%rax)
    4e50:	f5                   	cmc
    4e51:	fe                   	(bad)
    4e52:	ff 6f 00             	ljmp   *0x0(%rdi)
    4e55:	00 00                	add    %al,(%rax)
    4e57:	00 a0 03 00 00 00    	add    %ah,0x3(%rax)
    4e5d:	00 00                	add    %al,(%rax)
    4e5f:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 4e65 <_DYNAMIC+0xb5>
    4e65:	00 00                	add    %al,(%rax)
    4e67:	00 e8                	add    %ch,%al
    4e69:	05 00 00 00 00       	add    $0x0,%eax
    4e6e:	00 00                	add    %al,(%rax)
    4e70:	06                   	(bad)
    4e71:	00 00                	add    %al,(%rax)
    4e73:	00 00                	add    %al,(%rax)
    4e75:	00 00                	add    %al,(%rax)
    4e77:	00 c0                	add    %al,%al
    4e79:	03 00                	add    (%rax),%eax
    4e7b:	00 00                	add    %al,(%rax)
    4e7d:	00 00                	add    %al,(%rax)
    4e7f:	00 0a                	add    %cl,(%rdx)
    4e81:	00 00                	add    %al,(%rax)
    4e83:	00 00                	add    %al,(%rax)
    4e85:	00 00                	add    %al,(%rax)
    4e87:	00 15 02 00 00 00    	add    %dl,0x2(%rip)        # 4e8f <_DYNAMIC+0xdf>
    4e8d:	00 00                	add    %al,(%rax)
    4e8f:	00 0b                	add    %cl,(%rbx)
    4e91:	00 00                	add    %al,(%rax)
    4e93:	00 00                	add    %al,(%rax)
    4e95:	00 00                	add    %al,(%rax)
    4e97:	00 18                	add    %bl,(%rax)
    4e99:	00 00                	add    %al,(%rax)
    4e9b:	00 00                	add    %al,(%rax)
    4e9d:	00 00                	add    %al,(%rax)
    4e9f:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 4ea5 <_DYNAMIC+0xf5>
	...
    4ead:	00 00                	add    %al,(%rax)
    4eaf:	00 03                	add    %al,(%rbx)
    4eb1:	00 00                	add    %al,(%rax)
    4eb3:	00 00                	add    %al,(%rax)
    4eb5:	00 00                	add    %al,(%rax)
    4eb7:	00 e8                	add    %ch,%al
    4eb9:	4f 00 00             	rex.WRXB add %r8b,(%r8)
    4ebc:	00 00                	add    %al,(%rax)
    4ebe:	00 00                	add    %al,(%rax)
    4ec0:	02 00                	add    (%rax),%al
    4ec2:	00 00                	add    %al,(%rax)
    4ec4:	00 00                	add    %al,(%rax)
    4ec6:	00 00                	add    %al,(%rax)
    4ec8:	68 01 00 00 00       	push   $0x1
    4ecd:	00 00                	add    %al,(%rax)
    4ecf:	00 14 00             	add    %dl,(%rax,%rax,1)
    4ed2:	00 00                	add    %al,(%rax)
    4ed4:	00 00                	add    %al,(%rax)
    4ed6:	00 00                	add    %al,(%rax)
    4ed8:	07                   	(bad)
    4ed9:	00 00                	add    %al,(%rax)
    4edb:	00 00                	add    %al,(%rax)
    4edd:	00 00                	add    %al,(%rax)
    4edf:	00 17                	add    %dl,(%rdi)
    4ee1:	00 00                	add    %al,(%rax)
    4ee3:	00 00                	add    %al,(%rax)
    4ee5:	00 00                	add    %al,(%rax)
    4ee7:	00 c8                	add    %cl,%al
    4ee9:	09 00                	or     %eax,(%rax)
    4eeb:	00 00                	add    %al,(%rax)
    4eed:	00 00                	add    %al,(%rax)
    4eef:	00 07                	add    %al,(%rdi)
    4ef1:	00 00                	add    %al,(%rax)
    4ef3:	00 00                	add    %al,(%rax)
    4ef5:	00 00                	add    %al,(%rax)
    4ef7:	00 f0                	add    %dh,%al
    4ef9:	08 00                	or     %al,(%rax)
    4efb:	00 00                	add    %al,(%rax)
    4efd:	00 00                	add    %al,(%rax)
    4eff:	00 08                	add    %cl,(%rax)
    4f01:	00 00                	add    %al,(%rax)
    4f03:	00 00                	add    %al,(%rax)
    4f05:	00 00                	add    %al,(%rax)
    4f07:	00 d8                	add    %bl,%al
    4f09:	00 00                	add    %al,(%rax)
    4f0b:	00 00                	add    %al,(%rax)
    4f0d:	00 00                	add    %al,(%rax)
    4f0f:	00 09                	add    %cl,(%rcx)
    4f11:	00 00                	add    %al,(%rax)
    4f13:	00 00                	add    %al,(%rax)
    4f15:	00 00                	add    %al,(%rax)
    4f17:	00 18                	add    %bl,(%rax)
    4f19:	00 00                	add    %al,(%rax)
    4f1b:	00 00                	add    %al,(%rax)
    4f1d:	00 00                	add    %al,(%rax)
    4f1f:	00 fb                	add    %bh,%bl
    4f21:	ff                   	(bad)
    4f22:	ff 6f 00             	ljmp   *0x0(%rdi)
    4f25:	00 00                	add    %al,(%rax)
    4f27:	00 00                	add    %al,(%rax)
    4f29:	00 00                	add    %al,(%rax)
    4f2b:	08 00                	or     %al,(%rax)
    4f2d:	00 00                	add    %al,(%rax)
    4f2f:	00 fe                	add    %bh,%dh
    4f31:	ff                   	(bad)
    4f32:	ff 6f 00             	ljmp   *0x0(%rdi)
    4f35:	00 00                	add    %al,(%rax)
    4f37:	00 30                	add    %dh,(%rax)
    4f39:	08 00                	or     %al,(%rax)
    4f3b:	00 00                	add    %al,(%rax)
    4f3d:	00 00                	add    %al,(%rax)
    4f3f:	00 ff                	add    %bh,%bh
    4f41:	ff                   	(bad)
    4f42:	ff 6f 00             	ljmp   *0x0(%rdi)
    4f45:	00 00                	add    %al,(%rax)
    4f47:	00 03                	add    %al,(%rbx)
    4f49:	00 00                	add    %al,(%rax)
    4f4b:	00 00                	add    %al,(%rax)
    4f4d:	00 00                	add    %al,(%rax)
    4f4f:	00 f0                	add    %dh,%al
    4f51:	ff                   	(bad)
    4f52:	ff 6f 00             	ljmp   *0x0(%rdi)
    4f55:	00 00                	add    %al,(%rax)
    4f57:	00 fe                	add    %bh,%dh
    4f59:	07                   	(bad)
    4f5a:	00 00                	add    %al,(%rax)
    4f5c:	00 00                	add    %al,(%rax)
    4f5e:	00 00                	add    %al,(%rax)
    4f60:	f9                   	stc
    4f61:	ff                   	(bad)
    4f62:	ff 6f 00             	ljmp   *0x0(%rdi)
    4f65:	00 00                	add    %al,(%rax)
    4f67:	00 03                	add    %al,(%rbx)
	...

セクション .got の逆アセンブル:

0000000000004fc0 <.got>:
	...

セクション .got.plt の逆アセンブル:

0000000000004fe8 <_GLOBAL_OFFSET_TABLE_>:
    4fe8:	b0 4d                	mov    $0x4d,%al
	...
    4ffe:	00 00                	add    %al,(%rax)
    5000:	36 10 00             	ss adc %al,(%rax)
    5003:	00 00                	add    %al,(%rax)
    5005:	00 00                	add    %al,(%rax)
    5007:	00 46 10             	add    %al,0x10(%rsi)
    500a:	00 00                	add    %al,(%rax)
    500c:	00 00                	add    %al,(%rax)
    500e:	00 00                	add    %al,(%rax)
    5010:	56                   	push   %rsi
    5011:	10 00                	adc    %al,(%rax)
    5013:	00 00                	add    %al,(%rax)
    5015:	00 00                	add    %al,(%rax)
    5017:	00 66 10             	add    %ah,0x10(%rsi)
    501a:	00 00                	add    %al,(%rax)
    501c:	00 00                	add    %al,(%rax)
    501e:	00 00                	add    %al,(%rax)
    5020:	76 10                	jbe    5032 <_GLOBAL_OFFSET_TABLE_+0x4a>
    5022:	00 00                	add    %al,(%rax)
    5024:	00 00                	add    %al,(%rax)
    5026:	00 00                	add    %al,(%rax)
    5028:	86 10                	xchg   %dl,(%rax)
    502a:	00 00                	add    %al,(%rax)
    502c:	00 00                	add    %al,(%rax)
    502e:	00 00                	add    %al,(%rax)
    5030:	96                   	xchg   %eax,%esi
    5031:	10 00                	adc    %al,(%rax)
    5033:	00 00                	add    %al,(%rax)
    5035:	00 00                	add    %al,(%rax)
    5037:	00 a6 10 00 00 00    	add    %ah,0x10(%rsi)
    503d:	00 00                	add    %al,(%rax)
    503f:	00 b6 10 00 00 00    	add    %dh,0x10(%rsi)
    5045:	00 00                	add    %al,(%rax)
    5047:	00 c6                	add    %al,%dh
    5049:	10 00                	adc    %al,(%rax)
    504b:	00 00                	add    %al,(%rax)
    504d:	00 00                	add    %al,(%rax)
    504f:	00 d6                	add    %dl,%dh
    5051:	10 00                	adc    %al,(%rax)
    5053:	00 00                	add    %al,(%rax)
    5055:	00 00                	add    %al,(%rax)
    5057:	00 e6                	add    %ah,%dh
    5059:	10 00                	adc    %al,(%rax)
    505b:	00 00                	add    %al,(%rax)
    505d:	00 00                	add    %al,(%rax)
    505f:	00 f6                	add    %dh,%dh
    5061:	10 00                	adc    %al,(%rax)
    5063:	00 00                	add    %al,(%rax)
    5065:	00 00                	add    %al,(%rax)
    5067:	00 06                	add    %al,(%rsi)
    5069:	11 00                	adc    %eax,(%rax)
    506b:	00 00                	add    %al,(%rax)
    506d:	00 00                	add    %al,(%rax)
    506f:	00 16                	add    %dl,(%rsi)
    5071:	11 00                	adc    %eax,(%rax)
    5073:	00 00                	add    %al,(%rax)
    5075:	00 00                	add    %al,(%rax)
	...

セクション .data の逆アセンブル:

0000000000005078 <__data_start>:
	...

0000000000005080 <__dso_handle>:
    5080:	80 50 00 00          	adcb   $0x0,0x0(%rax)
    5084:	00 00                	add    %al,(%rax)
	...

0000000000005088 <DW.ref.__gxx_personality_v0>:
	...

セクション .comment の逆アセンブル:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 47 4e             	sub    %al,0x4e(%rdi)
   8:	55                   	push   %rbp
   9:	29 20                	sub    %esp,(%rax)
   b:	31 33                	xor    %esi,(%rbx)
   d:	2e 32 2e             	cs xor (%rsi),%ch
  10:	31 20                	xor    %esp,(%rax)
  12:	32 30                	xor    (%rax),%dh
  14:	32 33                	xor    (%rbx),%dh
  16:	30 38                	xor    %bh,(%rax)
  18:	30 31                	xor    %dh,(%rcx)
  1a:	00 63 6c             	add    %ah,0x6c(%rbx)
  1d:	61                   	(bad)
  1e:	6e                   	outsb  %ds:(%rsi),(%dx)
  1f:	67 20 76 65          	and    %dh,0x65(%esi)
  23:	72 73                	jb     98 <_init-0xf68>
  25:	69 6f 6e 20 31 36 2e 	imul   $0x2e363120,0x6e(%rdi),%ebp
  2c:	30 2e                	xor    %ch,(%rsi)
  2e:	36                   	ss
	...
